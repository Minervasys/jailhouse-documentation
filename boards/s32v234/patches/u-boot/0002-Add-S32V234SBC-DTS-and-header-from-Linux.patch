From 317de3d4a01216d3af3aead58f662000aac4c356 Mon Sep 17 00:00:00 2001
From: Andrea Bastoni <andrea.bastoni@tum.de>
Date: Thu, 11 Feb 2021 12:55:20 +0100
Subject: [PATCH 2/4] Add S32V234SBC DTS and header from Linux

---
 arch/arm/dts/fsl-s32v234.dtsi                 | 864 ++++++++++++++++++
 arch/arm/dts/fsl-s32v234sbc.dts               |  25 +
 arch/arm/dts/fsl-s32v234sbc.dtsi              | 725 +++++++++++++++
 include/dt-bindings/clock/s32v234-clock.h     | 199 ++++
 include/dt-bindings/pinctrl/s32v234-pinctrl.h | 741 +++++++++++++++
 5 files changed, 2554 insertions(+)
 create mode 100644 arch/arm/dts/fsl-s32v234.dtsi
 create mode 100644 arch/arm/dts/fsl-s32v234sbc.dts
 create mode 100644 arch/arm/dts/fsl-s32v234sbc.dtsi
 create mode 100644 include/dt-bindings/clock/s32v234-clock.h
 create mode 100644 include/dt-bindings/pinctrl/s32v234-pinctrl.h

diff --git a/arch/arm/dts/fsl-s32v234.dtsi b/arch/arm/dts/fsl-s32v234.dtsi
new file mode 100644
index 0000000000..fc4a688a29
--- /dev/null
+++ b/arch/arm/dts/fsl-s32v234.dtsi
@@ -0,0 +1,864 @@
+/*
+ * Copyright 2015-2016 Freescale Semiconductor, Inc.
+ * Copyright 2017-2019 NXP
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+#include <dt-bindings/clock/s32v234-clock.h>
+#include <dt-bindings/pinctrl/s32v234-pinctrl.h>
+
+/memreserve/ 0x80000000 0x00010000;
+
+/ {
+	compatible = "fsl,s32v234";
+	interrupt-parent = <&gic>;
+	#address-cells = <2>;
+	#size-cells = <2>;
+
+	aliases {
+		can0 = &can0;
+		can1 = &can1;
+		serial0 = &uart0;
+		serial1 = &uart1;
+		viu0 = &viulite0;
+		viu1 = &viulite1;
+	};
+
+	cpus {
+		#address-cells = <2>;
+		#size-cells = <0>;
+
+		cpu0: cpu@0 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a53";
+			reg = <0x0 0x0>;
+			enable-method = "spin-table";
+			cpu-release-addr = <0x0 0x80000000>;
+			next-level-cache = <&cluster0_l2_cache>;
+		};
+		cpu1: cpu@1 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a53";
+			reg = <0x0 0x1>;
+			enable-method = "spin-table";
+			cpu-release-addr = <0x0 0x80000000>;
+			next-level-cache = <&cluster0_l2_cache>;
+		};
+		cpu2: cpu@100 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a53";
+			reg = <0x0 0x100>;
+			enable-method = "spin-table";
+			cpu-release-addr = <0x0 0x80000000>;
+			next-level-cache = <&cluster1_l2_cache>;
+		};
+		cpu3: cpu@101 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a53";
+			reg = <0x0 0x101>;
+			enable-method = "spin-table";
+			cpu-release-addr = <0x0 0x80000000>;
+			next-level-cache = <&cluster1_l2_cache>;
+		};
+
+		cluster0_l2_cache: l2-cache0 {
+			compatible = "cache";
+		};
+
+		cluster1_l2_cache: l2-cache1 {
+			compatible = "cache";
+		};
+
+	};
+
+	clocks {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		fxosc {
+			compatible = "fixed-clock";
+			clock-frequency = <40000000>;
+			#clock-cells = <0>;
+		};
+		firc {
+			compatible = "fixed-clock";
+			clock-frequency = <48000000>;
+			#clock-cells = <0>;
+		};
+	};
+
+	pmu {
+		compatible = "arm,armv8-pmuv3";
+		interrupts = <0 163 0x4>,
+			     <0 164 0x4>,
+			     <0 165 0x4>,
+			     <0 166 0x4>;
+		interrupt-affinity = <&cpu0>,
+				     <&cpu1>,
+				     <&cpu2>,
+				     <&cpu3>;
+	};
+
+	pu_dummy: pudummy_reg {
+		/* only used in ldo-bypass */
+		/* used by the gpu driver */
+		compatible = "fsl,s32v234-dummy-pureg";
+	};
+
+	reserved-memory {
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+
+		/* Memory used exclusively for DCU & FB display surfaces */
+		dcu_surface_memory: dcu@0xC0000000 {
+			reg = <0x0 0xC0000000 0x0 0x01000000>;	/* 16 MB */
+			no-map;
+		};
+
+		/* 4Mb shared memory */
+		shared_memory: shm@0xC1000000 {
+			compatible = "fsl,s32v234-shm";
+			reg = <0x0 0xC1000000 0x0 0x400000>;    /* 4 MB */
+			no-map;
+		};
+	};
+
+	timer {
+		compatible = "arm,armv8-timer";
+		interrupts = <1 13 0xf08>,
+			     <1 14 0xf08>,
+			     <1 11 0xf08>,
+			     <1 10 0xf08>;
+		/* Will be modified by u-boot according to chip version. */
+		clock-frequency = <10000000>;
+	};
+
+	soc {
+		#address-cells = <2>;
+		#size-cells = <2>;
+		compatible = "simple-bus";
+		interrupt-parent = <&gic>;
+		ranges;
+
+		aips0: aips-bus@40000000 {
+			compatible = "simple-bus";
+			#address-cells = <2>;
+			#size-cells = <2>;
+			interrupt-parent = <&gic>;
+			reg = <0x0 0x40000000 0x0 0x7D000>;
+			ranges;
+
+			/*
+			 * TODO: Update the clocks when the clock framework is
+			 * defined.
+			 */
+
+			cse3: crypto@40001000 {
+				compatible = "fsl,s32v234-cse3";
+				reg = <0x0 0x40001000 0x0 0x1000>;
+				interrupts = <0 18 4>;
+				status = "disabled";
+			};
+
+			edma: dma-controller@40002000 {
+				#dma-cells = <2>;
+				compatible = "fsl,s32v234-edma";
+				reg = <0x0 0x40002000 0x0 0x2000>,
+				      <0x0 0x40031000 0x0 0x1000>,
+				      <0x0 0x400A1000 0x0 0x1000>;
+				dma-channels = <32>;
+				interrupts = <0 8 4>,
+					     <0 9 4>,
+					     <0 10 4>;
+				interrupt-names = "edma-tx_0-15",
+						  "edma-tx_16-31",
+						  "edma-err";
+				clock-names = "dmamux0", "dmamux1";
+				clocks = <&clks S32V234_CLK_DMACHMUX0>,
+					 <&clks S32V234_CLK_DMACHMUX1>;
+				status = "disabled";
+			};
+
+			swt0:swt@4000A000 {
+				compatible = "fsl,s32v234-wdt", "fsl,sac58r-wdt";
+				reg = <0x0 0x4000A000 0x0 0x1000>;
+				clocks = <&clks S32V234_CLK_FIRC>;
+				clock-names = "swt";
+				status = "disabled";
+			};
+
+			swt1:swt@4000B000 {
+				compatible = "fsl,s32v234-wdt",
+							 "fsl,sac58r-wdt";
+				reg = <0x0 0x4000B000 0x0 0x1000>;
+				clocks = <&clks S32V234_CLK_FIRC>;
+				clock-names = "swt";
+				status = "disabled";
+			};
+
+			stm0: stm@4000D000{
+				compatible = "fsl,s32v234-stm";
+				reg = <0x0 0x4000D000 0x0 0x1000>;
+				interrupts= <0 19 4>;
+				clocks = <&clks S32V234_CLK_SYS6>;
+				clock-names = "stm";
+				cpu = <2>;
+				status = "disabled";
+			};
+
+			qspi0: qspi@400A6000 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				compatible = "fsl,s32v234-qspi";
+				reg = <0x0 0x400A6000 0x0 0x1000>,
+				      <0x0 0x20000000 0x0 0x10000000>;
+				reg-names = "QuadSPI", "QuadSPI-memory";
+				interrupts = <0 24 4>;
+				clocks = <&clks S32V234_CLK_QUADSPI0_AHB>,
+					 <&clks S32V234_CLK_QUADSPI0>;
+				clock-names = "qspi_en", "qspi";
+				status = "disabled";
+			};
+
+			gpu: gpu@40020000 {
+				compatible = "fsl,s32v234-gpu";
+				reg = <0x0 0x40020000 0x0 0x1000>,
+				      <0x0 0xC0000000 0x0 0x0>;
+				reg-names = "iobase_3d", "phys_baseaddr";
+				interrupts = <0 101 0x04>;
+				interrupt-names = "irq_3d";
+				clocks = <&clks S32V234_CLK_GPU>,
+						<&clks S32V234_CLK_GPU_SHD>;
+				clock-names = "gpu3d_clk", "gpu3d_shader_clk";
+				resets = <&src 0>;
+				reset-names = "gpu3d";
+
+				/* ldo-bypass: use pu_dummy
+				if VDDSOC share with VDDPU */
+				pu-supply = <&pu_dummy>;
+			};
+
+			mipicsi0: mipicsi2_0@40030000{
+				compatible = "fsl,s32v234-mipicsi2-0";
+				reg = <0x0 0x40030000 0x0 0x1000>;
+				interrupts =  <0 91 1>,
+					<0 93 1>;
+				sensor = <0x0>; // nothing connected
+				clocks = <&clks S32V234_CLK_CSI0>,
+					 <&clks S32V234_CLK_CSI0_CLI>,
+					 <&clks S32V234_CLK_CSI0_CUI>,
+					 <&clks S32V234_CLK_CSI0_DPHY>;
+				clock-names = "csi", "cli", "cui", "dphy";
+
+				status = "disabled";
+			};
+
+			fec: ethernet@40032000 {
+				compatible = "fsl,s32v234-fec";
+				reg = <0x0 0x40032000 0x0 0x1000>;
+				interrupts = <0 35 4>,
+					     <0 36 4>,
+					     <0 37 4>,
+					     <0 38 4>;
+				clocks = <&clks S32V234_CLK_SYS6>,
+					 <&clks S32V234_CLK_SYS3>,
+					 <&clks S32V234_CLK_ENET_TIME>,
+					 <&clks S32V234_CLK_ENET>,
+					 <&clks	S32V234_CLK_ENET_TIME>;
+				clock-names = "ipg", "ahb", "ptp",
+					      "enet_clk_ref",
+					      "enet_out";
+				fsl,num-tx-queues=<3>;
+				fsl,num-rx-queues=<3>;
+				status = "disabled";
+			};
+
+			pit0: pit@4003A000{
+				compatible = "fsl,s32v234-pit";
+				reg = <0x0 0x4003A000 0x0 0x1000>;
+				interrupts= <0 31 4>;
+				clocks = <&clks S32V234_CLK_PIT0>;
+				clock-names = "pit";
+				cpu = <0>;
+				status = "disabled";
+			};
+
+			clks: mc_cgm0@4003C000 {
+				compatible = "fsl,s32v234-mc_cgm0";
+				reg = <0x0 0x4003C000 0x0 0x1000>;
+				#clock-cells = <1>;
+			};
+
+			mc_cgm1: mc_cgm1@4003F000 {
+				compatible = "fsl,s32v234-mc_cgm1";
+				reg = <0x0 0x4003F000 0x0 0x1000>;
+			};
+
+			mc_cgm2: mc_cgm2@40042000 {
+				compatible = "fsl,s32v234-mc_cgm2";
+				reg = <0x0 0x40042000 0x0 0x1000>;
+			};
+
+			mc_cgm3: mc_cgm3@40045000 {
+				compatible = "fsl,s32v234-mc_cgm3";
+				reg = <0x0 0x40045000 0x0 0x1000>;
+			};
+
+			mc_rgm: mc_rgm@40048000 {
+				compatible = "fsl,s32v234-mc_rgm";
+				reg = <0x0 0x40048000 0x0 0x1000>;
+			};
+			mc_me: mc_me@4004A000 {
+				compatible = "fsl,s32v234-mc_me",
+					     "fsl,s32v-reset";
+				reg = <0x0 0x4004A000 0x0 0x1000>;
+			};
+
+			i2c0: i2c@40051000 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				compatible = "fsl,s32v234-i2c";
+				reg = <0x0 0x40051000 0x0 0x1000>;
+				interrupts =<0 67 4>;
+				clocks = <&clks S32V234_CLK_IIC0>;
+				clock-names = "ipg";
+				clock-frequency = <400000>;
+				dmas = <&edma 0 5>,
+				       <&edma 0 6>;
+				dma-names = "rx","tx";
+				status = "disabled";
+			};
+
+			uart0:serial@40053000 {
+				compatible = "fsl,s32-linflexuart";
+				reg = <0x0 0x40053000 0x0 0x1000>;
+				interrupts = <0 59 1>;
+				clocks = <&clks S32V234_CLK_LIN0>,
+					 <&clks S32V234_CLK_LIN0_IPG>;
+				clock-names = "lin", "ipg";
+				dmas = <&edma 0 20>,
+				       <&edma 0 19>;
+				dma-names = "rx", "tx";
+				status = "disabled";
+			};
+
+			can0: flexcan@40055000 {
+				compatible = "fsl,s32v234-flexcan";
+				reg = <0x0 0x40055000 0x0 0x1000>;
+				interrupts = <0 41 4>,
+					     <0 42 4>;
+				interrupt-names = "state-berr", "mb";
+				clocks = <&clks S32V234_CLK_CAN0>,
+					 <&clks S32V234_CLK_CAN>;
+				clock-names = "ipg", "per";
+				s32v234-ocotp = <&ocotp>;
+			};
+
+			spi0: spi@40057000 {
+				compatible = "fsl,s32v234-dspi";
+				reg = <0x0 0x40057000 0x0 0x1000>;
+				interrupts = <0 61 4>;
+				clocks = <&clks S32V234_CLK_SPI0>;
+				clock-names = "dspi";
+				spi-num-chipselects = <8>;
+				bus-num = <0>;
+				spi-fifo-size = <5>;
+				spi-extended-mode;
+				spi-cpol;
+				spi-cpha;
+				status = "disabled";
+			};
+
+			spi2: spi@40059000 {
+				compatible = "fsl,s32v234-dspi";
+				reg = <0x0 0x40059000 0x0 0x1000>;
+				interrupts = <0 63 4>;
+				clocks = <&clks S32V234_CLK_SPI2>;
+				clock-names = "dspi";
+				spi-num-chipselects = <4>;
+				bus-num = <2>;
+				spi-fifo-size = <5>;
+				spi-extended-mode;
+				spi-cpol;
+				spi-cpha;
+				status = "disabled";
+			};
+
+			usdhc0: usdhc@4005D000 {
+				compatible = "fsl,s32v234-usdhc", "fsl,sac85r-usdhc";
+				reg = <0x0 0x4005D000 0x0 0x1000>;
+				interrupts = <0 28 4>;
+				clocks = <&clks S32V234_CLK_SDHC_IPS>,
+					 <&clks S32V234_CLK_SDHC_AHB>,
+					 <&clks S32V234_CLK_SDHC>;
+				clock-names = "ipg", "ahb", "per";
+				bus-width = <8>;
+				status = "disabled";
+			};
+
+			ocotp: ocotp@4005F000 {
+				reg = <0x0 0x4005F000 0x0 0x1000>;
+				clocks = <&clks S32V234_CLK_SYS6>;
+				status = "disabled";
+			};
+
+			viulite0: viulite0@40064000 {
+				compatible = "fsl,s32v234-viulite0";
+				reg = <0x0 0x40064000 0x0 0x1000>;
+				interrupts = <0 96 1>;
+				clocks = <&clks S32V234_CLK_VIU0_AHB>,
+					 <&clks S32V234_CLK_VIU0_IPS>;
+				clock-names = "viulite0", "per";
+				status = "disabled";
+			};
+
+			siul2 {
+				compatible = "simple-mfd";
+				#address-cells = <2>;
+				#size-cells = <2>;
+
+					/* MIDR registers */
+					/* They physically exist in EIRQ
+					 * addr space but they don't belong
+					 * to GPIO */
+				midr-reg = <0x0 0x4006C000 0x0 0x10>;
+
+					  /* EIRQs */
+				ranges = <0 0 0x0 0x4006C000 0x0 0xC4>,
+					  /* PINCTRL */
+					 <1 0 0x0 0x4006C240 0x0 0x1000>,
+					  /* Pad Data Output Register */
+					 <2 0 0x0 0x4006D300 0x0 0xA4>,
+					  /* Pad Data Input Register */
+					 <3 0 0x0 0x4006D500 0x0 0xA4>,
+					  /* Parallel GPIO Pad Data
+					     Out/Input Register */
+					 <4 0 0x0 0x4006D700 0x0 0x58>;
+
+				pinctrl: siul2-pinctrl@4006C000 {
+					compatible =
+						"fsl,s32v234-siul2-pinctrl";
+					reg = <0x1 0x0 0x0 0x1000>;
+					status = "disabled";
+				};
+
+				gpioeirq: siul2-gpio@4006C000 {
+					compatible = "fsl,s32v234-siul2-gpio";
+					gpio-controller;
+					#gpio-cells = <2>;
+						/* GPIO 0-31 */
+					gpio-ranges = <&pinctrl 0 0 32>,
+						/* EIRQ pins */
+						<&pinctrl 590 590 32>;
+						/* Output pad */
+					reg = <0x4 0x0 0x0 0x4>,
+						/* Input Pad */
+						<0x4 0x40 0x0 0x4>,
+						/* Reserved */
+						<0x2 0x0 0x0 0x1C>,
+						<0x3 0x0 0x0 0x1C>,
+						/* EIRQ */
+						<0x0 0x0 0x0 0xC4>;
+					interrupt-controller;
+					interrupts = <0 70 4>;
+					status = "disabled";
+				};
+
+				gpioother: siul2-gpio@4006D704 {
+					compatible = "fsl,s32v234-siul2-gpio";
+					gpio-controller;
+					#gpio-cells = <2>;
+					gpio-ranges = <&pinctrl 0 32 131>;
+						/* Output pad */
+					reg = <0x4 0x4 0x0 0x3C>,
+						/* Input Pad */
+						<0x4 0x44 0x0 0x3C>,
+						/* Reserved */
+						<0x2 0x1C 0x0 0x88>,
+						<0x3 0x1C 0x0 0x88>;
+					status = "disabled";
+				};
+			};
+
+			src: src@4007C000 {
+				compatible = "fsl,s32v234-src", "syscon";
+				reg = <0x0 0x4007C000 0x0 0x1000>;
+				#reset-cells = <1>;
+			};
+
+			dec200_dec: dec200@40026000 {
+				compatible = "fsl,s32v234-dec200_dec";
+				reg = <0x0 0x40026000 0x0 0x1000>;
+				interrupts = <0 97 4>;
+				clocks = <&clks S32V234_CLK_DCU_AXI>,
+					 <&clks S32V234_CLK_SYS6>;
+				clock-names = "dcu", "sys6";
+				status = "disabled";
+			};
+
+			dec200_enc: dec200@40027000 {
+				compatible = "fsl,s32v234-dec200_enc";
+				reg = <0x0 0x40027000 0x0 0x1000>;
+				interrupts = <0 98 4>;
+				clocks = <&clks S32V234_CLK_DEC200_ENC_AHB>,
+					 <&clks S32V234_CLK_DEC200_ENC_IPS>;
+				clock-names = "sys3", "sys6";
+				status = "disabled";
+			};
+
+			dcu0: dcu@40028000 {
+				compatible = "fsl,s32v234-dcu";
+				reg = <0x0 0x40028000 0x0 0x5000>;
+				interrupts = <0 95 4>;
+				clocks = <&clks S32V234_CLK_DCU_AXI>,
+					 <&clks S32V234_CLK_DCU_PIX>;
+				clock-names = "dcu", "ipg";
+				memory-region = <&dcu_surface_memory>;
+				status = "disabled";
+			};
+
+			saradc0: adc@4004d000 {
+				compatible = "fsl,s32v234-adc";
+				reg = <0x0 0x4004d000 0x0 0x1000>;
+				interrupts = <0 39 4>;
+				clocks = <&clks S32V234_CLK_SARADC0>;
+				clock-names = "adc";
+				vref = <1800>;
+				status = "okay";
+			};
+		};
+
+		aips1: aips-bus@40080000 {
+			compatible = "simple-bus";
+			#address-cells = <2>;
+			#size-cells = <2>;
+			interrupt-parent = <&gic>;
+			reg = <0x0 0x40080000 0x0 0x70000>;
+			ranges;
+
+			mscm1: mscm@40081000 {
+				compatible = "fsl,s32v234-mscm";
+
+				reg = <0x0 0x40081000 0x0 0x1000>;
+
+				/* CPU2CPU interrupts */
+				interrupts = <0 0 4 >,
+							<0 1 4 >,
+							<0 2 4 >,
+							<0 3 4 >;
+			};
+
+			swt2:swt@40084000 {
+				compatible = "fsl,s32v234-wdt",
+							 "fsl,sac58r-wdt";
+				reg = <0x0 0x40084000 0x0 0x1000>;
+				clocks = <&clks S32V234_CLK_FIRC>;
+				clock-names = "swt";
+				status = "disabled";
+			};
+
+			swt3:swt@40085000 {
+				compatible = "fsl,s32v234-wdt",
+							 "fsl,sac58r-wdt";
+				reg = <0x0 0x40085000 0x0 0x1000>;
+				clocks = <&clks S32V234_CLK_FIRC>;
+				clock-names = "swt";
+				status = "disabled";
+			};
+
+			stm1: stm@40087000{
+				compatible = "fsl,s32v234-stm";
+				reg = <0x0 0x40087000 0x0 0x1000>;
+				interrupts= <0 20 4>;
+				cpu = <3>;
+				clocks = <&clks S32V234_CLK_SYS6>;
+				clock-names = "stm";
+				status = "disabled";
+			};
+
+			mipicsi1: mipicsi2_1@400A0000{
+				compatible = "fsl,s32v234-mipicsi2-1";
+				reg = <0x0 0x400A0000 0x0 0x1000>;
+				interrupts = <0 92 1>,
+					<0 94 1>;
+				sensor = <0x0>;   // nothing connected
+				clocks = <&clks S32V234_CLK_CSI1>,
+					 <&clks S32V234_CLK_CSI1_CLI>,
+					 <&clks S32V234_CLK_CSI1_CUI>,
+					 <&clks S32V234_CLK_CSI1_DPHY>;
+				clock-names = "csi", "cli", "cui", "dphy";
+				status = "disabled";
+			};
+
+			pit1: pit@400AA000{
+				compatible = "fsl,s32v234-pit";
+				reg = <0x0 0x400AA000 0x0 0x1000>;
+				interrupts= <0 32 4>;
+				cpu = <1>;
+				clocks = <&clks S32V234_CLK_PIT1>;
+				clock-names = "pit";
+				status = "disabled";
+			};
+
+			fccu: fccu@400B0000 {
+				compatible = "fsl,s32v234-fccu";
+				reg = <0x0 0x400B0000 0x0 0x1000>;
+				clocks = <&clks S32V234_CLK_SYS6>;
+				clock-names = "fccu";
+				/* Address offset and configuration value for */
+				/* NCF_E2, NCFS_CFG4, NCFS_CFG5*/
+				cfg_reg_off = <0x9C 0x5C 0x60>;
+				cfg_reg_val = <0x3C000 0xA0000000 0xA>;
+				status = "disabled";
+			};
+
+			i2c1: i2c@400b8000 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				compatible = "fsl,s32v234-i2c";
+				reg = <0x0 0x400b8000 0x0 0x1000>;
+				interrupts =<0 68 4>;
+				clocks = <&clks S32V234_CLK_IIC1>;
+				clock-names = "ipg";
+				clock-frequency = <400000>;
+				dmas = <&edma 1 14>,
+				       <&edma 1 15>;
+				dma-names = "rx","tx";
+				status = "disabled";
+			};
+
+			i2c2: i2c@400ba000 {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				compatible = "fsl,s32v234-i2c";
+				reg = <0x0 0x400ba000 0x0 0x1000>;
+				interrupts =<0 69 4>;
+				clocks = <&clks S32V234_CLK_IIC2>;
+				clock-names = "ipg";
+				clock-frequency = <400000>;
+				dmas = <&edma 1 16>,
+				       <&edma 1 17>;
+				dma-names = "rx","tx";
+				status = "disabled";
+			};
+
+			uart1:serial@400bc000 {
+				compatible = "fsl,s32-linflexuart";
+				reg = <0x0 0x400bc000 0x0 0x1000>;
+				interrupts = <0 60 1>;
+				clocks = <&clks S32V234_CLK_LIN1>,
+					 <&clks S32V234_CLK_LIN1_IPG>;
+				clock-names = "lin", "ipg";
+				dmas = <&edma 1 13>,
+				       <&edma 1 12>;
+				dma-names = "rx", "tx";
+				status = "disabled";
+			};
+
+			can1: flexcan@400be000 {
+				compatible = "fsl,s32v234-flexcan";
+				reg = <0x0 0x400be000 0x0 0x1000>;
+				interrupts = <0 43 4>,
+					     <0 44 4>;
+				interrupt-names = "state-berr", "mb";
+				clocks = <&clks S32V234_CLK_CAN1>,
+					 <&clks S32V234_CLK_CAN>;
+				clock-names = "ipg", "per";
+				s32v234-ocotp = <&ocotp>;
+			};
+
+			spi1: spi@400C0000 {
+				compatible = "fsl,s32v234-dspi";
+				reg = <0x0 0x400C0000 0x0 0x1000>;
+				interrupts = <0 62 4>;
+				clocks = <&clks S32V234_CLK_SPI1>;
+				clock-names = "dspi";
+				spi-num-chipselects = <4>;
+				bus-num = <1>;
+				spi-fifo-size = <5>;
+				spi-extended-mode;
+				spi-cpol;
+				spi-cpha;
+				status = "disabled";
+			};
+
+			spi3: spi@400C2000 {
+				compatible = "fsl,s32v234-dspi";
+				reg = <0x0 0x400C2000 0x0 0x1000>;
+				interrupts = <0 64 4>;
+				clocks = <&clks S32V234_CLK_SPI3>;
+				clock-names = "dspi";
+				spi-num-chipselects = <4>;
+				bus-num = <3>;
+				spi-fifo-size = <5>;
+				spi-extended-mode;
+				spi-cpol;
+				spi-cpha;
+				status = "disabled";
+			};
+
+			tmu: tmu@400CE000 {
+				compatible = "fsl,s32v234-tmu";
+				reg = <0x0 0x400CE000 0x0 0x1000>;
+				clocks = <&clks S32V234_CLK_TSENS>;
+				clock-names = "tsens";
+				status = "disabled";
+			};
+
+			viulite1: viulite1@400D0000 {
+				compatible = "fsl,s32v234-viulite1";
+				reg = <0x0 0x400D0000 0x0 0x1000>;
+				interrupts = <0 100 1>;
+				clocks = <&clks S32V234_CLK_VIU1_AHB>,
+					 <&clks S32V234_CLK_VIU1_IPS>;
+				clock-names = "viulite1", "per";
+				status = "disabled";
+			};
+
+			jpegdecoder: jpegdecoder@400D4000 {
+				compatible = "fsl,s32v234-jpegdcd";
+				reg = <0x0 0x400D4000 0x0 0x1000>;
+				interrupts = <0 128 1>,
+					     <0 129 1>,
+					     <0 130 1>,
+					     <0 131 1>,
+					     <0 132 1>,
+					     <0 133 1>,
+					     <0 134 1>,
+					     <0 135 1>;
+				clocks = <&clks S32V234_CLK_MJPEG>,
+					 <&clks S32V234_CLK_JPEG_IPS>,
+					 <&clks S32V234_CLK_JPEG_SRAM_IPS>;
+				clock-names = "per", "ipg", "bclock";
+				status = "disabled";
+			};
+
+			h264decoder: h264decoder@400D8000 {
+				compatible = "fsl,s32v234-h264dcd";
+				reg = <0x0 0x400D8000 0x0 0x1000>;
+				interrupts = <0 136 1>,
+					     <0 137 1>,
+					     <0 138 1>,
+					     <0 139 1>,
+					     <0 140 1>,
+					     <0 141 1>,
+					     <0 142 1>,
+					     <0 143 1>,
+					     <0 144 1>,
+					     <0 145 1>,
+					     <0 146 1>,
+					     <0 147 1>,
+					     <0 148 1>,
+					     <0 149 1>;
+				clocks = <&clks S32V234_CLK_H264DCD>,
+				    <&clks S32V234_CLK_H264DCD_IPS>,
+				    <&clks S32V234_CLK_H264DCD_SRAM_IPS>;
+					 clock-names = "h264dcd", "ipg",
+							"bclock";
+				status = "disabled";
+			};
+
+			h264_encoder: h264_encoder@400DC000 {
+				compatible = "fsl,s32v234-h264_encoder";
+				reg = <0x0 0x400dc000 0x0 0x1000>;
+				interrupts = <0 150 1>,
+					<0 151 1>,
+					<0 152 1>,
+					<0 153 1>,
+					<0 154 1>,
+					<0 155 1>,
+					<0 156 1>,
+					<0 157 1>;
+				clocks = <&clks S32V234_CLK_H264ENC>,
+				   <&clks S32V234_CLK_H264ENC_IPS>,
+				   <&clks S32V234_CLK_H264ENC_SRAM_IPS>;
+				clock-names = "fsl_h264enc", "per",
+					      "bclock";
+				status = "disabled";
+			};
+		};
+	};
+
+	pcie: pcie@0x72000000 {
+		compatible = "fsl,s32v234-pcie";
+		reg = <0 0x72ffc000 0 0x4000>, <0 0x72f00000 0 0x80000>;
+		reg-names = "dbi", "config";
+		#address-cells = <3>;
+		#size-cells = <2>;
+		device_type = "pci";
+		ranges = <0x81000000 0 0          0 0x72f80000 0 0x00010000 /* downstream I/O */
+			  0x82000000 0 0x72000000 0 0x72000000 0 0x00f00000>; /* non-prefetchable memory */
+		num-lanes = <1>;
+		bus-range = <0x0 0xff>;
+		interrupts =  <0 103 4>, <0 104 4>, <0 105 4>;
+		interrupt-names = "link_req_rst_not", "dma","msi";
+		#interrupt-cells = <1>;
+		interrupt-map-mask = <0 0 0 0x7>;
+		interrupt-map = <0 0 0 1 &gic 0 108 4>,
+				<0 0 0 2 &gic 0 107 4>,
+				<0 0 0 3 &gic 0 106 4>,
+				<0 0 0 4 &gic 0 105 4>;
+		status = "disabled";
+	};
+
+	vseq: vision_sequencer@7C021000 {
+			compatible = "fsl,s32v234-vseq";
+			reg = <0x0 0x7C021000 0x0 0x1000>,
+			<0x0 0x7C022000 0x0 0x1000>;
+			interrupts = <0 113 1>,
+				<0 114 1>;
+			status = "disabled";
+	};
+
+	fdma: fast_dma@7C040000 {
+			compatible = "fsl,s32v234-fdma";
+			reg = <0x0 0x7C040000 0x0 0x1000>;
+			interrupts = <0 83 1>,
+				<0 84 1>;
+			clocks = <&clks S32V234_CLK_FDMA_AHB>;
+			clock-names = "sys3";
+			status = "disabled";
+	};
+
+	gic: interrupt-controller@7d001000 {
+		compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
+		#interrupt-cells = <3>;
+		#address-cells = <0>;
+		interrupt-controller;
+		reg = <0 0x7d001000 0 0x1000>,
+		      <0 0x7d002000 0 0x2000>,
+		      <0 0x7d004000 0 0x2000>,
+		      <0 0x7d006000 0 0x2000>;
+		interrupts = <1 9 0xf04>;
+	};
+
+	cci@7d090000 {
+		compatible = "arm,cci";
+		reg = <0 0x7d090000 0 0x10000>;
+		interrupts = <0 101 4>,
+			     <0 102 4>,
+			     <0 103 4>,
+			     <0 104 4>,
+			     <0 105 4>;
+	};
+
+	sram: sram@3E800000 {
+		device_type = "sram";
+		compatible = "mmio-sram","fsl,s32v234-sram";
+		reg = <0 0x3E800000 0 0x400000>;
+	};
+
+	memory_DDR0@80000000 {
+		device_type = "memory";
+		reg = <0 0x80000000 0 0x40000000>;
+	};
+
+	memory_DDR1@c0000000 {
+		device_type = "memory";
+		reg = <0 0xc0000000 0 0x40000000>;
+	};
+
+};
diff --git a/arch/arm/dts/fsl-s32v234sbc.dts b/arch/arm/dts/fsl-s32v234sbc.dts
new file mode 100644
index 0000000000..3a23a4d269
--- /dev/null
+++ b/arch/arm/dts/fsl-s32v234sbc.dts
@@ -0,0 +1,25 @@
+/*
+ * Copyright 2015 Freescale Semiconductor, Inc.
+ * (C) Copyright 2017 MicroSys Electronics GmbH
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+/dts-v1/;
+#include "fsl-s32v234sbc.dtsi"
+
+&fec {
+	phy-mode = "rgmii";
+	phy-handle = <&phy0>;
+	status = "okay";
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		phy0: ethernet-phy@1 {
+			reg = <1>;
+		};
+	};
+};
diff --git a/arch/arm/dts/fsl-s32v234sbc.dtsi b/arch/arm/dts/fsl-s32v234sbc.dtsi
new file mode 100644
index 0000000000..68ddd693b2
--- /dev/null
+++ b/arch/arm/dts/fsl-s32v234sbc.dtsi
@@ -0,0 +1,725 @@
+/*
+ * Copyright 2015-2016 Freescale Semiconductor, Inc.
+ * Copyright 2017 MicroSys Electronics GmbH
+ * Copyright 2018-2019 NXP
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+#include "fsl-s32v234.dtsi"
+/ {
+	model = "Freescale S32V234";
+	compatible = "fsl,s32v234-sbc", "fsl,s32v234";
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	memory_DDR0@80000000 {
+		device_type = "memory";
+		reg = <0 0x80000000 0 0x40000000>;
+	};
+
+	memory_DDR1@c0000000 {
+		device_type = "memory";
+		reg = <0 0xc0000000 0 0x40000000>;
+	};
+};
+
+&can0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_can0>;
+	status = "okay";
+};
+
+&can1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_can1>;
+	status = "okay";
+};
+
+&cse3 {
+	status = "okay";
+};
+
+&dec200_dec {
+	status = "okay";
+};
+
+&dec200_enc {
+	status = "okay";
+};
+
+&dcu0 {
+	display = <&display>;
+	status = "okay";
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_dcu>;
+
+display: display@0 {
+		 bits-per-pixel = <32>;
+
+		 display-timings {
+			 native-mode = <&timing2>;
+
+			timing0: hdmi-fhd {
+				clock-frequency = <150000000>;
+				hactive = <1920>;
+				vactive = <1080>;
+				vback-porch = <36>;
+				vfront-porch = <4>;
+				hback-porch = <148>;
+				hfront-porch = <88>;
+				hsync-len = <45>;
+				vsync-len = <16>;
+			};
+
+			timing1: hdmi-wuxga {
+				clock-frequency = <150000000>;
+				hactive = <1920>;
+				vactive = <1200>;
+				vback-porch = <40>;
+				vfront-porch = <5>;
+				hback-porch = <65>;
+				hfront-porch = <13>;
+				hsync-len = <2>;
+				vsync-len = <5>;
+			};
+
+			timing2: hdmi-ntsc {
+				clock-frequency = <25000000>;
+				hactive = <720>;
+				vactive = <480>;
+				vback-porch = <10>;
+				vfront-porch = <1>;
+				hback-porch = <85>;
+				hfront-porch = <17>;
+				hsync-len = <21>;
+				vsync-len = <3>;
+			};
+
+			timing3: hdmi-pal {
+				clock-frequency = <50000000>;
+				hactive = <720>;
+				vactive = <576>;
+				vback-porch = <83>;
+				vfront-porch = <21>;
+				hback-porch = <385>;
+				hfront-porch = <24>;
+				hsync-len = <91>;
+				vsync-len = <3>;
+			};
+
+			timing4: hdmi-vga {
+				clock-frequency = <25000000>;
+				hactive = <640>;
+				vactive = <480>;
+				vback-porch = <33>;
+				vfront-porch = <9>;
+				hback-porch = <48>;
+				hfront-porch = <16>;
+				hsync-len = <91>;
+				vsync-len = <2>;
+			};
+
+			timing5: hdmi-wxga {
+				clock-frequency = <75000000>;
+				hactive = <1280>;
+				vactive = <720>;
+				vback-porch = <20>;
+				vfront-porch = <5>;
+				hback-porch = <220>;
+				hfront-porch = <110>;
+				hsync-len = <37>;
+				vsync-len = <14>;
+			};
+
+			timing6: hdmi-xga {
+				clock-frequency = <75000000>;
+				hactive = <1024>;
+				vactive = <768>;
+				vback-porch = <49>;
+				vfront-porch = <10>;
+				hback-porch = <272>;
+				hfront-porch = <69>;
+				hsync-len = <136>;
+				vsync-len = <6>;
+			};
+
+			timing7: lvds-fhd {
+				clock-frequency = <150000000>;
+				hactive = <1920>;
+				vactive = <1080>;
+				vback-porch = <36>;
+				vfront-porch = <4>;
+				hback-porch = <148>;
+				hfront-porch = <88>;
+				hsync-len = <45>;
+				vsync-len = <16>;
+			};
+		 };
+	 };
+};
+
+&edma {
+	status = "okay";
+};
+
+&fdma {
+	status = "okay";
+};
+
+&fec {
+	status = "okay";
+};
+
+&gpioeirq {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_gpioeirq>;
+	status = "okay";
+};
+
+&gpioother {
+	status = "okay";
+};
+
+&h264decoder {
+	status = "okay";
+};
+
+&h264_encoder {
+	status = "okay";
+};
+
+&i2c0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c0>;
+	status = "okay";
+
+hdmi: sii9022a@39 {
+	      compatible = "fsl,sii902x";
+	      reg = <0x39>;
+};
+
+};
+
+&i2c1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c1>;
+	status = "okay";
+};
+
+&i2c2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c2>;
+	status = "okay";
+
+	rtc@51 {
+		compatible = "nxp,pcf85263";
+		reg = <0x51>;
+
+		quartz-load-capacitance = <2>;
+		quartz-drive-strength = <1>;
+	};
+};
+
+&jpegdecoder {
+	status = "okay";
+};
+
+&mipicsi0 {
+	status = "okay";
+};
+
+&mipicsi1 {
+	status = "okay";
+};
+
+&pit0 {
+	status = "okay";
+};
+
+&pit1 {
+	status = "okay";
+};
+
+&pcie {
+	status = "okay";
+};
+
+&pinctrl {
+	status = "okay";
+
+	s32v234-evb {
+pinctrl_can0: can0grp {
+		      fsl,pins = <
+			      S32V234_PAD_PA2__CAN_FD0_TXD
+			      S32V234_PAD_PA3__CAN_FD0_RXD_OUT
+			      S32V234_PAD_PA3__CAN_FD0_RXD_IN
+			      /*
+			       * Configure pin C12 as GPIO[6] in MSCR#6.
+			       * Effect: the S-pin at CAN is not longer
+			       * flowting at ~0.75V, but driven to low ~0.0V.
+			       */
+			      6	(PAD_CTL_MUX_MODE_ALT0 \
+					      |PAD_CTL_OBE \
+					      |PAD_CTL_DSE_34 \
+					      |PAD_CTL_PUS_33K_UP)
+			      >;
+	      };
+
+pinctrl_can1: can1grp {
+		      fsl,pins = <
+			      S32V234_PAD_PA4__CAN_FD1_TXD
+			      S32V234_PAD_PA5__CAN_FD1_RXD_OUT
+			      S32V234_PAD_PA5__CAN_FD1_RXD_IN
+			      /*
+			       * Configure pin C11 as GPIO[7] in MSCR#7.
+			       * Effect: the S-pin at CAN is not longer
+			       * flowting at ~0.39V, but driven to low ~0.0V.
+			       */
+			      7	(PAD_CTL_MUX_MODE_ALT0 \
+					      |PAD_CTL_OBE \
+					      |PAD_CTL_DSE_34 \
+					      |PAD_CTL_PUS_33K_UP)
+			      >;
+	      };
+
+pinctrl_dcu: dcugrp {
+		     fsl,pins = <
+			     S32V234_PAD_PH8__DCU_HSYNC_C1
+			     S32V234_PAD_PH9__DCU_VSYNC_C2
+			     S32V234_PAD_PH10__DCU_DE_C3
+			     S32V234_PAD_PH12__DCU_PCLK_D1_DSE_80
+			     S32V234_PAD_PH13__DCU_R0_D2
+			     S32V234_PAD_PH14__DCU_R1_D3
+			     S32V234_PAD_PH15__DCU_R2_D4
+			     S32V234_PAD_PJ0__DCU_R3_D5
+			     S32V234_PAD_PJ1__DCU_R4_D6
+			     S32V234_PAD_PJ2__DCU_R5_D7
+			     S32V234_PAD_PJ3__DCU_R6_D8
+			     S32V234_PAD_PJ4__DCU_R7_D9
+			     S32V234_PAD_PJ5__DCU_G0_D10
+			     S32V234_PAD_PJ6__DCU_G1_D11
+			     S32V234_PAD_PJ7__DCU_G2_D12
+			     S32V234_PAD_PJ8__DCU_G3_D13
+			     S32V234_PAD_PJ9__DCU_G4_D14
+			     S32V234_PAD_PJ10__DCU_G5_D15
+			     S32V234_PAD_PJ11__DCU_G6_D16
+			     S32V234_PAD_PJ12__DCU_G7_D17
+			     S32V234_PAD_PJ13__DCU_B0_D18
+			     S32V234_PAD_PJ14__DCU_B1_D19
+			     S32V234_PAD_PJ15__DCU_B2_D20
+			     S32V234_PAD_PK0__DCU_B3_D21
+			     S32V234_PAD_PK1__DCU_B4_D22
+			     S32V234_PAD_PK2__DCU_B5_D23
+			     S32V234_PAD_PK3__DCU_B6_D24
+			     S32V234_PAD_PK4__DCU_B7_D25
+			     >;
+	     };
+
+pinctrl_dspi0: dspi0grp {
+		       fsl,pins = <
+			       S32V234_PAD_PB8__SPI0_CS0_OUT
+			       S32V234_PAD_PB6__SPI0_SOUT_OUT
+			       S32V234_PAD_PB5__SPI0_SCK_OUT
+			       S32V234_PAD_PB7__SPI0_SIN_OUT
+			       S32V234_PAD_PB7__SPI0_SIN_IN
+			       >;
+	       };
+
+pinctrl_dspi3: dspi3grp {
+		       fsl,pins = <
+			       S32V234_PAD_PC4__SPI3_CS0_OUT
+			       S32V234_PAD_PC2__SPI3_SOUT_OUT
+			       S32V234_PAD_PC1__SPI3_SCK_OUT
+			       S32V234_PAD_PC3__SPI3_SIN_OUT
+			       S32V234_PAD_PC3__SPI3_SIN_IN
+			       >;
+	       };
+
+pinctrl_enet: enetgrp {
+		      fsl,pins = <
+			      S32V234_PAD_PC13__MDC
+			      S32V234_PAD_PC14__MDIO_OUT
+			      S32v234_PAD_PC14__MDIO_IN
+			      S32V234_PAD_PC15__TXCLK_OUT
+			      S32V234_PAD_PC15__TXCLK_IN
+			      S32V234_PAD_PD0__RXCLK_OUT
+			      S32V234_PAD_PD0__RXCLK_IN
+			      S32V234_PAD_PD1__RX_D0_OUT
+			      S32V234_PAD_PD1__RX_D0_IN
+			      S32V234_PAD_PD2__RX_D1_OUT
+			      S32V234_PAD_PD2__RX_D1_IN
+			      S32V234_PAD_PD3__RX_D2_OUT
+			      S32V234_PAD_PD3__RX_D2_IN
+			      S32V234_PAD_PD4__RX_D3_OUT
+			      S32V234_PAD_PD4__RX_D3_IN
+			      S32V234_PAD_PD4__RX_DV_OUT
+			      S32V234_PAD_PD4__RX_DV_IN
+			      S32V234_PAD_PD7__TX_D0_OUT
+			      S32V234_PAD_PD8__TX_D1_OUT
+			      S32V234_PAD_PD9__TX_D2_OUT
+			      S32V234_PAD_PD10__TX_D3_OUT
+			      S32V234_PAD_PD11__TX_EN_OUT
+			      >;
+	      };
+
+pinctrl_gpio: gpiogrp {
+		      fsl,pins = <
+			      S32V234_PAD_PA0__SIUL_GPIO0
+			      S32V234_PAD_PA1__SIUL_GPIO1
+			      S32V234_PAD_PA2__SIUL_GPIO2
+			      S32V234_PAD_PA3__SIUL_GPIO3
+			      S32V234_PAD_PA4__SIUL_GPIO4
+			      S32V234_PAD_PA5__SIUL_GPIO5
+			      S32V234_PAD_PA6__SIUL_GPIO6
+			      S32V234_PAD_PA7__SIUL_GPIO7
+			      S32V234_PAD_PA8__SIUL_GPIO8
+			      S32V234_PAD_PA9__SIUL_GPIO9
+			      S32V234_PAD_PA10__SIUL_GPIO10
+			      S32V234_PAD_PA11__SIUL_GPIO11
+			      S32V234_PAD_PA12__SIUL_GPIO12
+			      S32V234_PAD_PA13__SIUL_GPIO13
+			      S32V234_PAD_PA14__SIUL_GPIO14
+			      S32V234_PAD_PA15__SIUL_GPIO15
+			      S32V234_PAD_PB0__SIUL_GPIO16
+			      S32V234_PAD_PB1__SIUL_GPIO17
+			      S32V234_PAD_PB2__SIUL_GPIO18
+			      S32V234_PAD_PB3__SIUL_GPIO19
+			      S32V234_PAD_PB4__SIUL_GPIO20
+			      S32V234_PAD_PB5__SIUL_GPIO21
+			      S32V234_PAD_PB6__SIUL_GPIO22
+			      S32V234_PAD_PB7__SIUL_GPIO23
+			      S32V234_PAD_PB8__SIUL_GPIO24
+			      S32V234_PAD_PB9__SIUL_GPIO25
+			      S32V234_PAD_PB10__SIUL_GPIO26
+			      S32V234_PAD_PB11__SIUL_GPIO27
+			      S32V234_PAD_PB12__SIUL_GPIO28
+			      S32V234_PAD_PB13__SIUL_GPIO29
+			      S32V234_PAD_PB14__SIUL_GPIO30
+			      S32V234_PAD_PB15__SIUL_GPIO31
+			      S32V234_PAD_PC0__SIUL_GPIO32
+			      S32V234_PAD_PC1__SIUL_GPIO33
+			      S32V234_PAD_PC2__SIUL_GPIO34
+			      S32V234_PAD_PC3__SIUL_GPIO35
+			      S32V234_PAD_PC4__SIUL_GPIO36
+			      S32V234_PAD_PC5__SIUL_GPIO37
+			      S32V234_PAD_PC6__SIUL_GPIO38
+			      S32V234_PAD_PC7__SIUL_GPIO39
+			      S32V234_PAD_PC8__SIUL_GPIO40
+			      S32V234_PAD_PC9__SIUL_GPIO41
+			      S32V234_PAD_PC10__SIUL_GPIO42
+			      S32V234_PAD_PC11__SIUL_GPIO43
+			      S32V234_PAD_PC12__SIUL_GPIO44
+			      S32V234_PAD_PC13__SIUL_GPIO45
+			      S32V234_PAD_PC14__SIUL_GPIO46
+			      S32V234_PAD_PC15__SIUL_GPIO47
+			      S32V234_PAD_PD0__SIUL_GPIO48
+			      S32V234_PAD_PD1__SIUL_GPIO49
+			      S32V234_PAD_PD2__SIUL_GPIO50
+			      S32V234_PAD_PD3__SIUL_GPIO51
+			      S32V234_PAD_PD4__SIUL_GPIO52
+			      S32V234_PAD_PD5__SIUL_GPIO53
+			      S32V234_PAD_PD6__SIUL_GPIO54
+			      S32V234_PAD_PD7__SIUL_GPIO55
+			      S32V234_PAD_PD8__SIUL_GPIO56
+			      S32V234_PAD_PD9__SIUL_GPIO57
+			      S32V234_PAD_PD10__SIUL_GPIO58
+			      S32V234_PAD_PD11__SIUL_GPIO59
+			      S32V234_PAD_PD12__SIUL_GPIO60
+			      S32V234_PAD_PD13__SIUL_GPIO61
+			      S32V234_PAD_PD14__SIUL_GPIO62
+			      S32V234_PAD_PD15__SIUL_GPIO63
+			      S32V234_PAD_PE0__SIUL_GPIO64
+			      S32V234_PAD_PE1__SIUL_GPIO65
+			      S32V234_PAD_PE2__SIUL_GPIO66
+			      S32V234_PAD_PE3__SIUL_GPIO67
+			      S32V234_PAD_PE4__SIUL_GPIO68
+			      S32V234_PAD_PE5__SIUL_GPIO69
+			      S32V234_PAD_PE6__SIUL_GPIO70
+			      S32V234_PAD_PE7__SIUL_GPIO71
+			      S32V234_PAD_PE8__SIUL_GPIO72
+			      S32V234_PAD_PE9__SIUL_GPIO73
+			      S32V234_PAD_PE10__SIUL_GPIO74
+			      S32V234_PAD_PE11__SIUL_GPIO75
+			      S32V234_PAD_PE12__SIUL_GPIO76
+			      S32V234_PAD_PE13__SIUL_GPIO77
+			      S32V234_PAD_PE14__SIUL_GPIO78
+			      S32V234_PAD_PE15__SIUL_GPIO79
+			      S32V234_PAD_PF0__SIUL_GPIO80
+			      S32V234_PAD_PF1__SIUL_GPIO81
+			      S32V234_PAD_PF2__SIUL_GPIO82
+			      S32V234_PAD_PF3__SIUL_GPIO83
+			      S32V234_PAD_PF4__SIUL_GPIO84
+			      S32V234_PAD_PF5__SIUL_GPIO85
+			      S32V234_PAD_PF6__SIUL_GPIO86
+			      S32V234_PAD_PF7__SIUL_GPIO87
+			      S32V234_PAD_PF8__SIUL_GPIO88
+			      S32V234_PAD_PF9__SIUL_GPIO89
+			      S32V234_PAD_PF10__SIUL_GPIO90
+			      S32V234_PAD_PF11__SIUL_GPIO91
+			      S32V234_PAD_PF12__SIUL_GPIO92
+			      S32V234_PAD_PF13__SIUL_GPIO93
+			      S32V234_PAD_PF14__SIUL_GPIO94
+			      S32V234_PAD_PF15__SIUL_GPIO95
+			      S32V234_PAD_PG0__SIUL_GPIO96
+			      S32V234_PAD_PG1__SIUL_GPIO97
+			      S32V234_PAD_PG2__SIUL_GPIO98
+			      S32V234_PAD_PG3__SIUL_GPIO99
+			      S32V234_PAD_PG4__SIUL_GPIO100
+			      S32V234_PAD_PG5__SIUL_GPIO101
+			      S32V234_PAD_PG6__SIUL_GPIO102
+			      S32V234_PAD_PG7__SIUL_GPIO103
+			      S32V234_PAD_PG8__SIUL_GPIO104
+			      S32V234_PAD_PG9__SIUL_GPIO105
+			      S32V234_PAD_PG10__SIUL_GPIO106
+			      S32V234_PAD_PG11__SIUL_GPIO107
+			      S32V234_PAD_PG12__SIUL_GPIO108
+			      S32V234_PAD_PG13__SIUL_GPIO109
+			      S32V234_PAD_PG14__SIUL_GPIO110
+			      S32V234_PAD_PG15__SIUL_GPIO111
+			      S32V234_PAD_PH0__SIUL_GPIO112
+			      S32V234_PAD_PH1__SIUL_GPIO113
+			      S32V234_PAD_PH2__SIUL_GPIO114
+			      S32V234_PAD_PH3__SIUL_GPIO115
+			      S32V234_PAD_PH4__SIUL_GPIO116
+			      S32V234_PAD_PH5__SIUL_GPIO117
+			      S32V234_PAD_PH6__SIUL_GPIO118
+			      S32V234_PAD_PH7__SIUL_GPIO119
+			      S32V234_PAD_PH8__SIUL_GPIO120
+			      S32V234_PAD_PH9__SIUL_GPIO121
+			      S32V234_PAD_PH10__SIUL_GPIO122
+			      S32V234_PAD_PH11__SIUL_GPIO123
+			      S32V234_PAD_PH12__SIUL_GPIO124
+			      S32V234_PAD_PH13__SIUL_GPIO125
+			      S32V234_PAD_PH14__SIUL_GPIO126
+			      S32V234_PAD_PH15__SIUL_GPIO127
+			      S32V234_PAD_PJ0__SIUL_GPIO128
+			      S32V234_PAD_PJ1__SIUL_GPIO129
+			      S32V234_PAD_PJ2__SIUL_GPIO130
+			      S32V234_PAD_PJ3__SIUL_GPIO131
+			      S32V234_PAD_PJ4__SIUL_GPIO132
+			      S32V234_PAD_PJ5__SIUL_GPIO133
+			      S32V234_PAD_PJ6__SIUL_GPIO134
+			      S32V234_PAD_PJ7__SIUL_GPIO135
+			      S32V234_PAD_PJ8__SIUL_GPIO136
+			      S32V234_PAD_PJ9__SIUL_GPIO137
+			      S32V234_PAD_PJ10__SIUL_GPIO138
+			      S32V234_PAD_PJ11__SIUL_GPIO139
+			      S32V234_PAD_PJ12__SIUL_GPIO140
+			      S32V234_PAD_PJ13__SIUL_GPIO141
+			      S32V234_PAD_PJ14__SIUL_GPIO142
+			      S32V234_PAD_PJ15__SIUL_GPIO143
+			      S32V234_PAD_PK0__SIUL_GPIO144
+			      S32V234_PAD_PK1__SIUL_GPIO145
+			      S32V234_PAD_PK2__SIUL_GPIO146
+			      S32V234_PAD_PK3__SIUL_GPIO147
+			      S32V234_PAD_PK4__SIUL_GPIO148
+			      S32V234_PAD_PK5__SIUL_GPIO149
+			      S32V234_PAD_PK6__SIUL_GPIO150
+			      S32V234_PAD_PK7__SIUL_GPIO151
+			      S32V234_PAD_PK8__SIUL_GPIO152
+			      S32V234_PAD_PK9__SIUL_GPIO153
+			      S32V234_PAD_PK10__SIUL_GPIO154
+			      S32V234_PAD_PK11__SIUL_GPIO155
+			      S32V234_PAD_PK12__SIUL_GPIO156
+			      S32V234_PAD_PK13__SIUL_GPIO157
+			      S32V234_PAD_PK14__SIUL_GPIO158
+			      S32V234_PAD_PK15__SIUL_GPIO159
+			      S32V234_PAD_PL0__SIUL_GPIO160
+			      S32V234_PAD_PL1__SIUL_GPIO161
+			      S32V234_PAD_PL2__SIUL_GPIO162
+			      >;
+	      };
+
+pinctrl_gpioeirq: gpioeirqgrp {
+			  fsl,pins = <
+				  S32V234_PAD_PA0__SIUL_EIRQ0
+				  S32V234_PAD_PA1__SIUL_EIRQ1
+				  S32V234_PAD_PA2__SIUL_EIRQ2
+				  S32V234_PAD_PA3__SIUL_EIRQ3
+				  S32V234_PAD_PA4__SIUL_EIRQ4
+				  S32V234_PAD_PA5__SIUL_EIRQ5
+				  S32V234_PAD_PA6__SIUL_EIRQ6
+				  S32V234_PAD_PA7__SIUL_EIRQ7
+				  S32V234_PAD_PA8__SIUL_EIRQ8
+				  S32V234_PAD_PA9__SIUL_EIRQ9
+				  S32V234_PAD_PA10__SIUL_EIRQ10
+				  S32V234_PAD_PA11__SIUL_EIRQ11
+				  S32V234_PAD_PA12__SIUL_EIRQ12
+				  S32V234_PAD_PA13__SIUL_EIRQ13
+				  S32V234_PAD_PA14__SIUL_EIRQ14
+				  S32V234_PAD_PA15__SIUL_EIRQ15
+				  S32V234_PAD_PB0__SIUL_EIRQ16
+				  S32V234_PAD_PB1__SIUL_EIRQ17
+				  S32V234_PAD_PB2__SIUL_EIRQ18
+				  S32V234_PAD_PB3__SIUL_EIRQ19
+				  S32V234_PAD_PB4__SIUL_EIRQ20
+				  S32V234_PAD_PB5__SIUL_EIRQ21
+				  S32V234_PAD_PB6__SIUL_EIRQ22
+				  S32V234_PAD_PB7__SIUL_EIRQ23
+				  S32V234_PAD_PB8__SIUL_EIRQ24
+				  S32V234_PAD_PB9__SIUL_EIRQ25
+				  S32V234_PAD_PB10__SIUL_EIRQ26
+				  S32V234_PAD_PB11__SIUL_EIRQ27
+				  S32V234_PAD_PB12__SIUL_EIRQ28
+				  S32V234_PAD_PB13__SIUL_EIRQ29
+				  S32V234_PAD_PB14__SIUL_EIRQ30
+				  S32V234_PAD_PB15__SIUL_EIRQ31
+				  >;
+		  };
+
+pinctrl_i2c0: i2c0grp {
+		      fsl,pins = <
+			      S32V234_PAD_PG3__I2C0_DATA_OUT
+			      S32V234_PAD_PG3__I2C0_DATA_IN
+			      S32V234_PAD_PG4__I2C0_SCLK_OUT
+			      S32V234_PAD_PG4__I2C0_SCLK_IN
+			      >;
+	      };
+
+pinctrl_i2c1: i2c1grp {
+		      fsl,pins = <
+			      S32V234_PAD_PG5__I2C1_DATA_OUT
+			      S32V234_PAD_PG5__I2C1_DATA_IN
+			      S32V234_PAD_PG6__I2C1_SCLK_OUT
+			      S32V234_PAD_PG6__I2C1_SCLK_IN
+			      >;
+	      };
+
+pinctrl_i2c2: i2c2grp {
+		      fsl,pins = <
+			      S32V234_PAD_PB3__I2C2_DATA_OUT
+			      S32V234_PAD_PB3__I2C2_DATA_IN
+			      S32V234_PAD_PB4__I2C2_SCLK_OUT
+			      S32V234_PAD_PB4__I2C2_SCLK_IN
+			      >;
+	      };
+
+pinctrl_uart0: uart0grp {
+		       fsl,pins = <
+			       S32V234_PAD_PA12__UART0_TXD
+			       S32V234_PAD_PA11__UART0_RXD_OUT
+			       S32V234_PAD_PA11__UART0_RXD_IN
+			       >;
+	       };
+
+pinctrl_uart1: uart1grp {
+		       fsl,pins = <
+			       S32V234_PAD_PA14__UART1_TXD
+			       S32V234_PAD_PA13__UART1_RXD_OUT
+			       S32V234_PAD_PA13__UART1_RXD_IN
+			       >;
+	       };
+
+pinctrl_usdhc0: usdhc0grp {
+			fsl,pins = <
+				S32V234_PAD_PK6__USDHC_CLK_OUT
+				S32V234_PAD_PK6__USDHC_CLK_IN
+				S32V234_PAD_PK7__USDHC_CMD_OUT
+				S32V234_PAD_PK7__USDHC_CMD_IN
+				S32V234_PAD_PK8__USDHC_DAT0_OUT
+				S32V234_PAD_PK8__USDHC_DAT0_IN
+				S32V234_PAD_PK9__USDHC_DAT1_OUT
+				S32V234_PAD_PK9__USDHC_DAT1_IN
+				S32V234_PAD_PK10__USDHC_DAT2_OUT
+				S32V234_PAD_PK10__USDHC_DAT2_IN
+				S32V234_PAD_PK11__USDHC_DAT3_OUT
+				S32V234_PAD_PK11__USDHC_DAT3_IN
+				S32V234_PAD_PK15__USDHC_DAT4_OUT
+				S32V234_PAD_PK15__USDHC_DAT4_IN
+				S32V234_PAD_PL0__USDHC_DAT5_OUT
+				S32V234_PAD_PL0__USDHC_DAT5_IN
+				S32V234_PAD_PL1__USDHC_DAT6_OUT
+				S32V234_PAD_PL1__USDHC_DAT6_IN
+				S32V234_PAD_PL2__USDHC_DAT7_OUT
+				S32V234_PAD_PL2__USDHC_DAT7_IN
+				>;
+		};
+
+	};
+};
+
+&spi0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_dspi0>;
+	status = "okay";
+};
+
+&spi3 {
+#address-cells = <1>;
+#size-cells = <0>;
+
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_dspi3>;
+	status = "okay";
+
+	/* This is an example entry to illustrate SPI device setup.
+	 * To be hooked up to the expansion port SPI3 CS0 for testing.
+	 */
+spidev0: spidev@0 {
+		 compatible = "spidev";
+		 spi-max-frequency = <4000000>;
+		 reg = <0>;
+	 };
+};
+
+&stm0 {
+	status = "okay";
+};
+
+&stm1 {
+	status = "okay";
+};
+
+&swt0 {
+	status = "okay";
+};
+
+&swt1 {
+	status = "okay";
+};
+
+&swt2 {
+	status = "okay";
+};
+
+&swt3 {
+	status = "okay";
+};
+
+&fccu {
+	status = "okay";
+};
+
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart0>;
+	status = "okay";
+};
+
+&uart1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart1>;
+	status = "okay";
+};
+
+&usdhc0 {
+	no-1-8-v;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_usdhc0>;
+	status = "okay";
+};
+
+&vseq {
+	status = "okay";
+};
+
+&tmu {
+	status = "okay";
+};
diff --git a/include/dt-bindings/clock/s32v234-clock.h b/include/dt-bindings/clock/s32v234-clock.h
new file mode 100644
index 0000000000..14bb8a4a9b
--- /dev/null
+++ b/include/dt-bindings/clock/s32v234-clock.h
@@ -0,0 +1,199 @@
+/*
+ * Copyright (C) 2015-2016 Freescale Semiconductor, Inc.
+ * Copyright 2017-2019 NXP
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+#ifndef __DT_BINDINGS_CLOCK_S32V234_H
+#define __DT_BINDINGS_CLOCK_S32V234_H
+
+#define	S32V234_CLK_DUMMY			0
+#define	S32V234_CLK_FXOSC			1
+#define	S32V234_CLK_FIRC			2
+/* ARM PLL */
+#define	S32V234_CLK_ARMPLL_SRC_SEL		3
+#define	S32V234_CLK_ARMPLL_VCO			4
+#define	S32V234_CLK_ARMPLL_PHI0			5
+#define	S32V234_CLK_ARMPLL_PHI1			6
+#define	S32V234_CLK_ARMPLL_DFS0			7
+#define	S32V234_CLK_ARMPLL_DFS1			8
+#define	S32V234_CLK_ARMPLL_DFS2			9
+/* PERIPH PLL */
+#define	S32V234_CLK_PERIPHPLL_SRC_SEL		10
+#define	S32V234_CLK_PERIPHPLL_VCO		11
+#define	S32V234_CLK_PERIPHPLL_PHI0		12
+#define	S32V234_CLK_PERIPHPLL_PHI0_DIV3		13
+#define	S32V234_CLK_PERIPHPLL_PHI0_DIV5		14
+#define	S32V234_CLK_PERIPHPLL_PHI1		15
+/* ENET PLL */
+#define	S32V234_CLK_ENETPLL_SRC_SEL		16
+#define	S32V234_CLK_ENETPLL_VCO			17
+#define	S32V234_CLK_ENETPLL_PHI0		18
+#define	S32V234_CLK_ENETPLL_PHI1		19
+#define	S32V234_CLK_ENETPLL_DFS0		20
+#define	S32V234_CLK_ENETPLL_DFS1		21
+#define	S32V234_CLK_ENETPLL_DFS2		22
+#define	S32V234_CLK_ENETPLL_DFS3		23
+/* DDR PLL */
+#define	S32V234_CLK_DDRPLL_SRC_SEL		24
+#define	S32V234_CLK_DDRPLL_VCO			25
+#define	S32V234_CLK_DDRPLL_PHI0			26
+#define	S32V234_CLK_DDRPLL_PHI1			27
+#define	S32V234_CLK_DDRPLL_DFS0			28
+#define	S32V234_CLK_DDRPLL_DFS1			29
+#define	S32V234_CLK_DDRPLL_DFS2			30
+/* VIDEO PLL */
+#define	S32V234_CLK_VIDEOPLL_SRC_SEL		31
+#define	S32V234_CLK_VIDEOPLL_VCO			32
+#define	S32V234_CLK_VIDEOPLL_PHI0		33
+/* Cores Clock */
+#define	S32V234_CLK_CORES_SEL			34
+#define	S32V234_CLK_CORE			35
+#define	S32V234_CLK_CORE2			36
+#define	S32V234_CLK_COREDBG			37
+/* System Clock */
+#define	S32V234_CLK_SYS_SEL			38
+#define	S32V234_CLK_SYS3			39
+#define	S32V234_CLK_SYS6			40
+#define	S32V234_CLK_SYS6_DIV2			41
+/* GPU Clock */
+#define	S32V234_CLK_GPU				42
+#define	S32V234_CLK_GPU_SEL			43
+#define	S32V234_CLK_GPUSHD_MIPI_SEL		44
+#define	S32V234_CLK_GPU_SHD			45
+#define	S32V234_CLK_MIPI_LI			46
+/* PERI_CLK */
+#define	S32V234_CLK_PERI			47
+#define	S32V234_CLK_PERI_FRAY_PLL_SEL		48
+/* FRAY Clock */
+#define	S32V234_CLK_PERI_FRAY_PLL		49
+#define	S32V234_CLK_FRAY_PLL			50
+#define	S32V234_CLK_FRAY			51
+#define	S32V234_CLK_FRAY_SEL			52
+/* CAN Clock */
+#define	S32V234_CLK_CAN				53
+#define	S32V234_CLK_CAN_SEL			54
+/* LINFLEX Clock */
+#define	S32V234_CLK_LIN				55
+#define	S32V234_CLK_LIN_SEL			56
+#define	S32V234_CLK_LIN_IPG			57
+/* FLEXTIMER0_EXT_CLK */
+#define	S32V234_CLK_FLEXTIMER0_EXT_CLK		58
+#define	S32V234_CLK_FLEXTIMER0_EXT_CLK_SEL	59
+/* FLEXTIMER1_EXT_CLK */
+#define	S32V234_CLK_FLEXTIMER1_EXT_CLK		60
+#define	S32V234_CLK_FLEXTIMER1_EXT_CLK_SEL	61
+/* ENET Clock */
+#define	S32V234_CLK_ENET_TIME_DIV		62
+#define	S32V234_CLK_ENET_TIME_SEL		63
+#define	S32V234_CLK_ENET_DIV			64
+#define	S32V234_CLK_ENET_SEL			65
+/* H264 Clock */
+#define	S32V234_CLK_H264DCD_DIV			66
+#define	S32V234_CLK_H264DCD_SEL			67
+#define	S32V234_CLK_H264ENC_DIV			68
+#define	S32V234_CLK_H264ENC_SEL			69
+/* QuadSPI Clock */
+#define	S32V234_CLK_QuadSPI			70
+#define	S32V234_CLK_QuadSPI_SEL			71
+/* SDHC Clock */
+#define	S32V234_CLK_SDHC_DIV			72
+#define	S32V234_CLK_SDHC_SEL			73
+/* DDR Clock */
+#define	S32V234_CLK_DDR				74
+#define	S32V234_CLK_DDR_SEL			75
+#define	S32V234_CLK_DDR4			76
+/* APEX_SYS Clock */
+#define	S32V234_CLK_APEX_SYS			77
+/* ISP Clock */
+#define	S32V234_CLK_ISP				78
+#define	S32V234_CLK_ISP_SEL			79
+/* SEQ Clock */
+#define	S32V234_CLK_SEQ				80
+#define	S32V234_CLK_SEQ2			81
+/* APEX APU Clock */
+#define	S32V234_CLK_APEX_APU			82
+#define	S32V234_CLK_APEX_APU_SEL		83
+/* MJPEG Clock */
+#define	S32V234_CLK_MJPEG_DIV			84
+#define	S32V234_CLK_MJPEG_SEL			85
+/* DCU Clock */
+#define	S32V234_CLK_DCU_SEL			86
+#define	S32V234_CLK_DCU_AXI_DIV			87
+#define	S32V234_CLK_DCU_PIX_DIV			88
+#define	S32V234_CLK_DCU_AXI			89
+#define	S32V234_CLK_DCU_PIX			90
+
+#define	S32V234_CLK_CAN0			91
+#define	S32V234_CLK_CAN1			92
+#define	S32V234_CLK_CRC0			93
+#define	S32V234_CLK_CRC1			94
+#define	S32V234_CLK_CSI0			95
+#define	S32V234_CLK_CSI0_CLI			96
+#define	S32V234_CLK_CSI0_CUI			97
+#define	S32V234_CLK_CSI0_DPHY			99
+#define	S32V234_CLK_CSI0_IPS			100
+#define	S32V234_CLK_CSI1			101
+#define	S32V234_CLK_CSI1_CLI			102
+#define	S32V234_CLK_CSI1_CUI			103
+#define	S32V234_CLK_CSI1_DPHY			104
+#define	S32V234_CLK_CSI1_IPS			105
+#define	S32V234_CLK_DEC200_ENC_IPS		106
+#define	S32V234_CLK_DEC200_ENC_AHB		107
+#define	S32V234_CLK_DMACHMUX0			108
+#define	S32V234_CLK_DMACHMUX1			109
+#define	S32V234_CLK_ENET			110
+#define	S32V234_CLK_ENET_AHB			111
+#define	S32V234_CLK_ENET_IPS			112
+#define	S32V234_CLK_ENET_TIME			113
+#define	S32V234_CLK_FLEXRAY			114
+#define	S32V234_CLK_FLEXTIMER0			115
+#define	S32V234_CLK_FLEXTIMER1			116
+#define	S32V234_CLK_H264DCD			117
+#define	S32V234_CLK_H264DCD_IPS			118
+#define	S32V234_CLK_H264DCD_SRAM_IPS		119
+#define	S32V234_CLK_H264ENC			120
+#define	S32V234_CLK_H264ENC_IPS			121
+#define	S32V234_CLK_H264ENC_SRAM_IPS		122
+#define	S32V234_CLK_HPSMI			123
+#define	S32V234_CLK_IIC0			124
+#define	S32V234_CLK_IIC1			125
+#define	S32V234_CLK_IIC2			126
+#define	S32V234_CLK_MJPEG			127
+#define	S32V234_CLK_JPEG_IPS			128
+#define	S32V234_CLK_JPEG_SRAM_IPS		129
+#define	S32V234_CLK_LFAST			130
+#define	S32V234_CLK_LIN0			131
+#define	S32V234_CLK_LIN0_IPG			132
+#define	S32V234_CLK_LIN1			133
+#define	S32V234_CLK_LIN1_IPG			134
+#define	S32V234_CLK_MBIST			135
+#define	S32V234_CLK_MMDC0			136
+#define	S32V234_CLK_MMDC1			137
+#define	S32V234_CLK_PIT0			138
+#define	S32V234_CLK_PIT1			139
+#define	S32V234_CLK_QUADSPI0			140
+#define	S32V234_CLK_QUADSPI0_AHB		141
+#define	S32V234_CLK_SARADC0			142
+#define	S32V234_CLK_SDHC			143
+#define	S32V234_CLK_SDHC_AHB			144
+#define	S32V234_CLK_SDHC_IPS			145
+#define	S32V234_CLK_SPI0			146
+#define	S32V234_CLK_SPI1			147
+#define	S32V234_CLK_SPI2			148
+#define	S32V234_CLK_SPI3			149
+#define	S32V234_CLK_SIPI			150
+#define	S32V234_CLK_TSENS			151
+#define	S32V234_CLK_VIU0_AHB			152
+#define	S32V234_CLK_VIU0_IPS			153
+#define	S32V234_CLK_VIU1_AHB			154
+#define	S32V234_CLK_VIU1_IPS			155
+#define	S32V234_CLK_VIDEOPLLDIV2		156
+#define	S32V234_CLK_FDMA_AHB			157
+
+#define	S32V234_CLK_END				158
+#endif /* __DT_BINDINGS_CLOCK_S32V234_H */
diff --git a/include/dt-bindings/pinctrl/s32v234-pinctrl.h b/include/dt-bindings/pinctrl/s32v234-pinctrl.h
new file mode 100644
index 0000000000..9ca55ad737
--- /dev/null
+++ b/include/dt-bindings/pinctrl/s32v234-pinctrl.h
@@ -0,0 +1,741 @@
+/*
+ * Copyright 2015-2016 by Freescale Semiconductor
+ * Copyright 2016-2017,2019 NXP
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ */
+
+#ifndef __DT_BINDINGS_S32V234_PINCTRL_H__
+#define __DT_BINDINGS_S32V234_PINCTRL_H__
+
+/*
+ * Use to set PAD control
+ */
+#define PAD_CTL_DCYLE_TRIM_OFS      (22)
+#define PAD_CTL_DCYLE_TRIM_NONE     (0 << PAD_CTL_DCYLE_TRIM_OFS)
+#define PAD_CTL_DCYLE_TRIM_LEFT     (1 << PAD_CTL_DCYLE_TRIM_OFS)
+#define PAD_CTL_DCYLE_TRIM_RIGHT    (2 << PAD_CTL_DCYLE_TRIM_OFS)
+
+#define PAD_CTL_OBE         (1 << 21)
+#define PAD_CTL_ODE         (1 << 20)
+#define PAD_CTL_IBE         (1 << 19)
+#define PAD_CTL_HYS         (1 << 18)
+#define PAD_CTL_INV         (1 << 17)
+#define PAD_CTL_PKE         (1 << 16)
+
+#define PAD_CTL_SRE_OFS             (14)
+#define PAD_CTL_SRE_LOW_50HZ        (0 << PAD_CTL_SRE_OFS)
+#define PAD_CTL_SRE_LOW_100MHZ      (1 << PAD_CTL_SRE_OFS)
+/* The manual reports the same value for SRE = 01 and SRE = 10 */
+#define PAD_CTL_SRE_HIGH_100MHZ     (2 << PAD_CTL_SRE_OFS)
+#define PAD_CTL_SRE_HIGH_200MHZ     (3 << PAD_CTL_SRE_OFS)
+
+#define PAD_CTL_PUE             (1 << 13)
+
+#define PAD_CTL_PUS_OFS         (11)
+#define PAD_CTL_PUS_100K_DOWN   (0 << PAD_CTL_PUS_OFS)
+#define PAD_CTL_PUS_50K_UP      (1 << PAD_CTL_PUS_OFS)
+#define PAD_CTL_PUS_100K_UP     (2 << PAD_CTL_PUS_OFS)
+#define PAD_CTL_PUS_33K_UP      (3 << PAD_CTL_PUS_OFS)
+#define PAD_CTL_PUS_MASK        (3 << PAD_CTL_PUS_OFS)
+
+#define PAD_CTL_DSE_OFS         (8)
+#define PAD_CTL_DSE_OUT_DISABLE (0 << PAD_CTL_DSE_OFS)
+#define PAD_CTL_DSE_240         (1 << PAD_CTL_DSE_OFS)
+#define PAD_CTL_DSE_120         (2 << PAD_CTL_DSE_OFS)
+#define PAD_CTL_DSE_80          (3 << PAD_CTL_DSE_OFS)
+#define PAD_CTL_DSE_60          (4 << PAD_CTL_DSE_OFS)
+#define PAD_CTL_DSE_48          (5 << PAD_CTL_DSE_OFS)
+#define PAD_CTL_DSE_40          (6 << PAD_CTL_DSE_OFS)
+#define PAD_CTL_DSE_34          (7 << PAD_CTL_DSE_OFS)
+#define PAD_CTL_DSE_MASK        (7 << PAD_CTL_DSE_OFS)
+
+#define PAD_CTL_CRPOINT_TRIM    (3 << 6)
+
+#define PAD_CTL_SMC             (1 << 5)
+
+#define PAD_CTL_MUX_MODE_ALT0   (0)
+#define PAD_CTL_MUX_MODE_ALT1   (1)
+#define PAD_CTL_MUX_MODE_ALT2   (2)
+#define PAD_CTL_MUX_MODE_ALT3   (3)
+#define PAD_CTL_MUX_MODE_ALT4   (4)
+#define PAD_CTL_MUX_MODE_ALT5   (5)
+#define PAD_CTL_MUX_MODE_ALT6   (6)
+#define PAD_CTL_MUX_MODE_ALT7   (7)
+#define PAD_CTL_MUX_MODE_MASK   (0xF)
+
+
+/* UART configuration */
+#define PAD_CTL_UART_TX         (PAD_CTL_OBE | PAD_CTL_PUS_100K_UP | PAD_CTL_DSE_60 |\
+                                PAD_CTL_SRE_LOW_100MHZ | PAD_CTL_MUX_MODE_ALT1)
+#define PAD_CTL_UART_RX_MSCR    (PAD_CTL_PUE | PAD_CTL_IBE | PAD_CTL_DCYLE_TRIM_RIGHT)
+#define PAD_CTL_UART_RX_IMCR    (PAD_CTL_MUX_MODE_ALT2)
+
+/* CAN0 configuration */
+#define PAD_CTL_CAN_FD0_TX      (PAD_CTL_OBE | PAD_CTL_PUS_50K_UP | PAD_CTL_PUE |\
+								PAD_CTL_DSE_34 | PAD_CTL_MUX_MODE_ALT1)
+#define PAD_CTL_CAN_FD0_RX_MSCR (PAD_CTL_PUE | PAD_CTL_IBE | PAD_CTL_PUS_50K_UP)
+#define PAD_CTL_CAN_FD0_RX_IMCR (PAD_CTL_MUX_MODE_ALT2)
+
+/* CAN1 configuration */
+#define PAD_CTL_CAN_FD1_TX      (PAD_CTL_OBE | PAD_CTL_PUS_50K_UP | PAD_CTL_PUE |\
+								PAD_CTL_DSE_34 | PAD_CTL_MUX_MODE_ALT1)
+#define PAD_CTL_CAN_FD1_RX_MSCR (PAD_CTL_PUE | PAD_CTL_IBE | PAD_CTL_PUS_50K_UP)
+#define PAD_CTL_CAN_FD1_RX_IMCR (PAD_CTL_MUX_MODE_ALT3)
+
+/* USDHC configuration  */
+#define PAD_CTL_USDHC_BASE      (PAD_CTL_SRE_HIGH_200MHZ | PAD_CTL_OBE | \
+                                PAD_CTL_DSE_34 | PAD_CTL_PKE |  \
+                                PAD_CTL_IBE | PAD_CTL_PUS_100K_UP | PAD_CTL_PUE)
+#define PAD_CTL_USDHC_CMD       (PAD_CTL_USDHC_BASE | PAD_CTL_MUX_MODE_ALT1)
+#define PAD_CTL_USDHC_CLK       (PAD_CTL_USDHC_BASE | PAD_CTL_MUX_MODE_ALT2)
+#define PAD_CTL_USDHC_DAT0_3    (PAD_CTL_USDHC_BASE | PAD_CTL_MUX_MODE_ALT2)
+#define PAD_CTL_USDHC_DAT4_7    (PAD_CTL_USDHC_BASE | PAD_CTL_MUX_MODE_ALT3)
+
+/* QSPI configuration  */
+#define PAD_CTL_QSPI_BASE         (PAD_CTL_SRE_HIGH_200MHZ | PAD_CTL_OBE | \
+                                  PAD_CTL_DSE_34 | PAD_CTL_IBE)
+#define PAD_CTL_QSPI_CLK_BASE     (PAD_CTL_SRE_HIGH_200MHZ | PAD_CTL_DSE_34 | \
+                                  PAD_CTL_PUS_100K_UP | PAD_CTL_OBE)
+#define PAD_CTL_QSPI_CK2_MUX      PAD_CTL_MUX_MODE_ALT1
+#define PAD_CTL_QSPI_A_SCK_MUX    PAD_CTL_MUX_MODE_ALT1
+#define PAD_CTL_QSPI_B_SCK_MUX    PAD_CTL_MUX_MODE_ALT1
+#define PAD_CTL_QSPI_A_CS0_MUX    PAD_CTL_MUX_MODE_ALT1
+#define PAD_CTL_QSPI_B_CS0_MUX    PAD_CTL_MUX_MODE_ALT1
+#define PAD_CTL_QSPI_A_CS1_MUX    PAD_CTL_MUX_MODE_ALT1
+#define PAD_CTL_QSPI_B_CS1_MUX    PAD_CTL_MUX_MODE_ALT1
+#define PAD_CTL_QSPI_A_DQS        (PAD_CTL_SRE_HIGH_200MHZ | PAD_CTL_IBE | \
+                                  PAD_CTL_PUS_100K_DOWN | PAD_CTL_PUE | \
+                                  PAD_CTL_PKE)
+#define PAD_CTL_QSPI_A_DATA0_3    (PAD_CTL_QSPI_BASE | PAD_CTL_MUX_MODE_ALT1)
+#define PAD_CTL_QSPI_A_DATA4_7    (PAD_CTL_QSPI_BASE | PAD_CTL_MUX_MODE_ALT2)
+#define PAD_CTL_QSPI_B_DATA0_3    (PAD_CTL_QSPI_BASE | PAD_CTL_MUX_MODE_ALT1)
+
+/* EIRQ configuration */
+#define PAD_CTL_EIRQ              PAD_CTL_MUX_MODE_ALT2
+
+/* I2C0 - Serial Data Input PA15 */
+#define PAD_CTL_I2C0_MSCR_SDA_PA15    (PAD_CTL_MUX_MODE_ALT1 | PAD_CTL_OBE | \
+					PAD_CTL_IBE | PAD_CTL_ODE | \
+					PAD_CTL_DSE_34)
+#define PAD_CTL_I2C0_IMCR_SDA_PA15    (PAD_CTL_MUX_MODE_ALT2)
+
+/* I2C0 - Serial Clock Input PB0 */
+#define PAD_CTL_I2C0_MSCR_SCLK_PB0    (PAD_CTL_MUX_MODE_ALT1 | PAD_CTL_OBE | \
+					PAD_CTL_IBE | PAD_CTL_ODE | \
+					PAD_CTL_DSE_34)
+#define PAD_CTL_I2C0_IMCR_SCLK_PB0    (PAD_CTL_MUX_MODE_ALT2)
+
+/* I2C0 - Serial Data Input PG3 */
+#define PAD_CTL_I2C0_MSCR_SDA_PG3	(PAD_CTL_MUX_MODE_ALT2 | PAD_CTL_OBE | \
+					 PAD_CTL_IBE | PAD_CTL_ODE | \
+					 PAD_CTL_DSE_34)
+#define PAD_CTL_I2C0_IMCR_SDA_PG3	(PAD_CTL_MUX_MODE_ALT3)
+
+/* I2C0 - Serial Clock Input PG4 */
+#define PAD_CTL_I2C0_MSCR_SCLK_PG4     (PAD_CTL_MUX_MODE_ALT2 | PAD_CTL_OBE | \
+					PAD_CTL_IBE | PAD_CTL_ODE | \
+					PAD_CTL_DSE_34)
+#define PAD_CTL_I2C0_IMCR_SCLK_PG4     (PAD_CTL_MUX_MODE_ALT3)
+
+/* I2C1 - Serial Data Input */
+#define  PAD_CTL_I2C1_MSCR_SDA  (PAD_CTL_MUX_MODE_ALT2 | PAD_CTL_OBE | PAD_CTL_IBE | \
+                                PAD_CTL_ODE | PAD_CTL_DSE_34)
+#define PAD_CTL_I2C1_IMCR_SDA   (PAD_CTL_MUX_MODE_ALT3)
+
+/* I2C1 - Serial Clock Input */
+#define  PAD_CTL_I2C1_MSCR_SCLK (PAD_CTL_MUX_MODE_ALT2 | PAD_CTL_OBE | PAD_CTL_IBE | \
+                                PAD_CTL_ODE | PAD_CTL_DSE_34)
+#define PAD_CTL_I2C1_IMCR_SCLK  (PAD_CTL_MUX_MODE_ALT3)
+
+/* I2C2 - Serial Data Input */
+#define  PAD_CTL_I2C2_MSCR_SDA  (PAD_CTL_MUX_MODE_ALT1 | PAD_CTL_OBE | PAD_CTL_IBE | \
+                                PAD_CTL_ODE | PAD_CTL_DSE_34)
+#define PAD_CTL_I2C2_IMCR_SDA   (PAD_CTL_MUX_MODE_ALT2)
+
+/* I2C2 - Serial Clock Input */
+#define  PAD_CTL_I2C2_MSCR_SCLK (PAD_CTL_MUX_MODE_ALT1 | PAD_CTL_OBE | PAD_CTL_IBE | \
+                                PAD_CTL_ODE | PAD_CTL_DSE_34)
+#define PAD_CTL_I2C2_IMCR_SCLK  (PAD_CTL_MUX_MODE_ALT2)
+
+/* ENET CFG1 = 0x203701 */
+#define PAD_CTL_ENET_CFG1       (PAD_CTL_DSE_34 | PAD_CTL_PUS_100K_UP | PAD_CTL_PUE | \
+                                PAD_CTL_OBE | PAD_CTL_MUX_MODE_ALT1)
+
+/* ENET CFG2 = 0x20c701 */
+#define PAD_CTL_ENET_CFG2       (PAD_CTL_DSE_34 | PAD_CTL_SRE_HIGH_200MHZ | \
+                                PAD_CTL_OBE | PAD_CTL_MUX_MODE_ALT1)
+
+/* ENET CFG3 = 0x28c701 */
+#define PAD_CTL_ENET_CFG3       (PAD_CTL_DSE_34 | PAD_CTL_SRE_HIGH_200MHZ | \
+                                PAD_CTL_OBE | PAD_CTL_IBE | PAD_CTL_MUX_MODE_ALT1)
+
+/* ENET CFG7 = 0x8c700 */
+#define PAD_CTL_ENET_CFG4       (PAD_CTL_DSE_34 | PAD_CTL_SRE_HIGH_200MHZ | PAD_CTL_IBE)
+
+/* DCU CFG = 0x20C101 */
+#define PAD_CTL_DCU_CFG		(PAD_CTL_DSE_80 | PAD_CTL_SRE_HIGH_200MHZ | \
+				PAD_CTL_OBE | PAD_CTL_IBE | \
+				PAD_CTL_MUX_MODE_ALT1)
+
+#define PAD_CTL_DCU_CLK_CFG_DSE_DISABLE	(PAD_CTL_SRE_HIGH_200MHZ | \
+					PAD_CTL_OBE | PAD_CTL_IBE | \
+					PAD_CTL_MUX_MODE_ALT1)
+
+/* VIU IMCR = 0x00000002 */
+#define PAD_CTL_VIU_CFG		(PAD_CTL_MUX_MODE_ALT2)
+
+/* VIU MSCR = 0x00000002 */
+#define PAD_CTL_VIU_IBE		(PAD_CTL_IBE)
+
+/* SPI 0-3 */
+#define PAD_CTL_SPI_MSCR_CSx	 \
+				(PAD_CTL_OBE | PAD_CTL_PUS_100K_UP | \
+				 PAD_CTL_DSE_34 | PAD_CTL_PUE)
+
+#define PAD_CTL_SPI_MSCR_SCK   (PAD_CTL_OBE | \
+				PAD_CTL_DSE_34 | \
+				PAD_CTL_MUX_MODE_ALT1)
+
+#define PAD_CTL_SPI_MSCR_SOUT	(PAD_CTL_OBE | PAD_CTL_DSE_34 |\
+				 PAD_CTL_MUX_MODE_ALT1)
+
+#define PAD_CTL_SPI_MSCR_SIN	(PAD_CTL_PUE | PAD_CTL_IBE | \
+				 PAD_CTL_PUS_50K_UP)
+
+#define PAD_CTL_SPI_IMCR_SIN	(PAD_CTL_MUX_MODE_ALT2)
+
+/* Format of pins: MSCR_IDX PAD_CONFIGURATION If you know the IMCR_IDX
+ * instead of MSCR_IDX, add 512 to it as the Reference Manual states.
+ */
+
+/* UART configuration */
+#define S32V234_PAD_PA12__UART0_TXD         12  PAD_CTL_UART_TX
+#define S32V234_PAD_PA11__UART0_RXD_OUT     11  PAD_CTL_UART_RX_MSCR
+#define S32V234_PAD_PA11__UART0_RXD_IN      712 PAD_CTL_UART_RX_IMCR
+
+#define S32V234_PAD_PA14__UART1_TXD         14  PAD_CTL_UART_TX
+#define S32V234_PAD_PA13__UART1_RXD_OUT     13  PAD_CTL_UART_RX_MSCR
+#define S32V234_PAD_PA13__UART1_RXD_IN      714 PAD_CTL_UART_RX_IMCR
+
+/* CAN0 configuration */
+#define S32V234_PAD_PA2__CAN_FD0_TXD        2   PAD_CTL_CAN_FD0_TX
+#define S32V234_PAD_PA3__CAN_FD0_RXD_OUT    3   PAD_CTL_CAN_FD0_RX_MSCR
+#define S32V234_PAD_PA3__CAN_FD0_RXD_IN     700 PAD_CTL_CAN_FD0_RX_IMCR
+
+/* CAN1 configuration */
+#define S32V234_PAD_PA4__CAN_FD1_TXD        4  PAD_CTL_CAN_FD1_TX
+#define S32V234_PAD_PA5__CAN_FD1_RXD_OUT    5  PAD_CTL_CAN_FD1_RX_MSCR
+#define S32V234_PAD_PA5__CAN_FD1_RXD_IN     701 PAD_CTL_CAN_FD1_RX_IMCR
+
+/* uSDHC configuration */
+#define S32V234_PAD_PK6__USDHC_CLK_OUT      150 PAD_CTL_USDHC_CLK
+#define S32V234_PAD_PK6__USDHC_CLK_IN       902 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PK7__USDHC_CMD_OUT      151 PAD_CTL_USDHC_CMD
+#define S32V234_PAD_PK7__USDHC_CMD_IN       901 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PK8__USDHC_DAT0_OUT     152 PAD_CTL_USDHC_DAT0_3
+#define S32V234_PAD_PK8__USDHC_DAT0_IN      903 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PK9__USDHC_DAT1_OUT     153 PAD_CTL_USDHC_DAT0_3
+#define S32V234_PAD_PK9__USDHC_DAT1_IN      904 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PK10__USDHC_DAT2_OUT    154 PAD_CTL_USDHC_DAT0_3
+#define S32V234_PAD_PK10__USDHC_DAT2_IN     905 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PK11__USDHC_DAT3_OUT    155 PAD_CTL_USDHC_DAT0_3
+#define S32V234_PAD_PK11__USDHC_DAT3_IN     906 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PK15__USDHC_DAT4_OUT    159 PAD_CTL_USDHC_DAT4_7
+#define S32V234_PAD_PK15__USDHC_DAT4_IN     907 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PL0__USDHC_DAT5_OUT     160 PAD_CTL_USDHC_DAT4_7
+#define S32V234_PAD_PL0__USDHC_DAT5_IN      908 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PL1__USDHC_DAT6_OUT     161 PAD_CTL_USDHC_DAT4_7
+#define S32V234_PAD_PL1__USDHC_DAT6_IN      909 PAD_CTL_MUX_MODE_ALT3
+
+#define S32V234_PAD_PL2__USDHC_DAT7_OUT     162 PAD_CTL_USDHC_DAT4_7
+#define S32V234_PAD_PL2__USDHC_DAT7_IN      910 PAD_CTL_MUX_MODE_ALT3
+
+/* QSPI configuration */
+#define S32V234_PAD_PK7__QSPI_A_DQS         819 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PK14__QSPI_B_DQS        828 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PK8__QSPI_A_DATA0_IN    820 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PK8__QSPI_A_DATA0_OUT   152 PAD_CTL_QSPI_A_DATA0_3
+
+#define S32V234_PAD_PK9__QSPI_A_DATA1_IN    821 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PK9__QSPI_A_DATA1_OUT   153 PAD_CTL_QSPI_A_DATA0_3
+
+#define S32V234_PAD_PK10__QSPI_A_DATA2_IN   822 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PK10__QSPI_A_DATA2_OUT  154 PAD_CTL_QSPI_A_DATA0_3
+
+#define S32V234_PAD_PK11__QSPI_A_DATA3_IN   823 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PK11__QSPI_A_DATA3_OUT  155 PAD_CTL_QSPI_A_DATA0_3
+
+#define S32V234_PAD_PK15__QSPI_A_DATA4_IN   824 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PK15__QSPI_A_DATA4_OUT  159 PAD_CTL_QSPI_A_DATA4_7
+
+#define S32V234_PAD_PL0__QSPI_A_DATA5_IN    825 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PL0__QSPI_A_DATA5_OUT   160 PAD_CTL_QSPI_A_DATA4_7
+
+#define S32V234_PAD_PL1__QSPI_A_DATA6_IN    826 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PL1__QSPI_A_DATA6_OUT   161 PAD_CTL_QSPI_A_DATA4_7
+
+#define S32V234_PAD_PL2__QSPI_A_DATA7_IN    827 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PL2__QSPI_A_DATA7_OUT   162 PAD_CTL_QSPI_A_DATA4_7
+
+#define S32V234_PAD_PK15__QSPI_B_DATA0_IN   829 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PK15__QSPI_B_DATA0_OUT  159 PAD_CTL_QSPI_B_DATA0_3
+
+#define S32V234_PAD_PL0__QSPI_B_DATA1_IN    830 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PL0__QSPI_B_DATA1_OUT   160 PAD_CTL_QSPI_B_DATA0_3
+
+#define S32V234_PAD_PL1__QSPI_B_DATA2_IN    831 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PL1__QSPI_B_DATA2_OUT   161 PAD_CTL_QSPI_B_DATA0_3
+
+#define S32V234_PAD_PL2__QSPI_B_DATA3_IN    832 PAD_CTL_MUX_MODE_ALT2
+#define S32V234_PAD_PL2__QSPI_B_DATA3_OUT   162 PAD_CTL_QSPI_B_DATA0_3
+
+#define S32V234_PAD_PF12__QSPI_A_CS1        92  (PAD_CTL_QSPI_CLK_BASE | PAD_CTL_QSPI_A_CS1_MUX)
+#define S32V234_PAD_PF13__QSPI_B_CS1        93  (PAD_CTL_QSPI_CLK_BASE | PAD_CTL_QSPI_B_CS1_MUX)
+
+#define S32V234_PAD_PK5__QSPI_A_CS0         149 (PAD_CTL_QSPI_CLK_BASE | PAD_CTL_QSPI_A_CS0_MUX)
+#define S32V234_PAD_PK6__QSPI_A_SCK         150 (PAD_CTL_QSPI_CLK_BASE | PAD_CTL_QSPI_A_SCK_MUX)
+
+#define S32V234_PAD_PK12__QSPI_B_CS0        156 (PAD_CTL_QSPI_CLK_BASE | PAD_CTL_QSPI_B_CS0_MUX)
+#define S32V234_PAD_PK13__QSPI_B_SCK        157 (PAD_CTL_QSPI_CLK_BASE | PAD_CTL_QSPI_B_SCK_MUX)
+
+#define S32V234_PAD_PK13__QSPI_CK2          157 (PAD_CTL_QSPI_CLK_BASE | PAD_CTL_QSPI_CK2_MUX)
+
+/* I2C configuration */
+#define S32V234_PAD_PA15__I2C0_DATA_OUT     15  PAD_CTL_I2C0_MSCR_SDA_PA15
+#define S32V234_PAD_PA15__I2C0_DATA_IN      781 PAD_CTL_I2C0_IMCR_SDA_PA15
+
+#define S32V234_PAD_PB0__I2C0_SCLK_OUT      16  PAD_CTL_I2C0_MSCR_SCLK_PB0
+#define S32V234_PAD_PB0__I2C0_SCLK_IN       780 PAD_CTL_I2C0_IMCR_SCLK_PB0
+
+#define S32V234_PAD_PG3__I2C0_DATA_OUT      99  PAD_CTL_I2C0_MSCR_SDA_PG3
+#define S32V234_PAD_PG3__I2C0_DATA_IN       781 PAD_CTL_I2C0_IMCR_SDA_PG3
+
+#define S32V234_PAD_PG4__I2C0_SCLK_OUT      100 PAD_CTL_I2C0_MSCR_SCLK_PG4
+#define S32V234_PAD_PG4__I2C0_SCLK_IN       780 PAD_CTL_I2C0_IMCR_SCLK_PG4
+
+#define S32V234_PAD_PG5__I2C1_DATA_OUT      101 PAD_CTL_I2C1_MSCR_SDA
+#define S32V234_PAD_PG5__I2C1_DATA_IN       783 PAD_CTL_I2C1_IMCR_SDA
+
+#define S32V234_PAD_PG6__I2C1_SCLK_OUT      102 PAD_CTL_I2C1_MSCR_SCLK
+#define S32V234_PAD_PG6__I2C1_SCLK_IN       782 PAD_CTL_I2C1_IMCR_SCLK
+
+#define S32V234_PAD_PB3__I2C2_DATA_OUT      19  PAD_CTL_I2C2_MSCR_SDA
+#define S32V234_PAD_PB3__I2C2_DATA_IN       785 PAD_CTL_I2C2_IMCR_SDA
+
+#define S32V234_PAD_PB4__I2C2_SCLK_OUT      20  PAD_CTL_I2C2_MSCR_SCLK
+#define S32V234_PAD_PB4__I2C2_SCLK_IN       784 PAD_CTL_I2C2_IMCR_SCLK
+
+/* ENET configuration */
+#define S32V234_PAD_PC13__MDC               45  PAD_CTL_ENET_CFG2
+
+#define S32V234_PAD_PC14__MDIO_OUT          46  PAD_CTL_ENET_CFG3
+#define S32v234_PAD_PC14__MDIO_IN           981 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PC15__TXCLK_OUT         47  PAD_CTL_ENET_CFG1
+#define S32V234_PAD_PC15__TXCLK_IN          978 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PD0__RXCLK_OUT          48  PAD_CTL_ENET_CFG4
+#define S32V234_PAD_PD0__RXCLK_IN           979 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PD1__RX_D0_OUT          49  PAD_CTL_ENET_CFG4
+#define S32V234_PAD_PD1__RX_D0_IN           974 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PD2__RX_D1_OUT          50  PAD_CTL_ENET_CFG4
+#define S32V234_PAD_PD2__RX_D1_IN           975 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PD3__RX_D2_OUT          51  PAD_CTL_ENET_CFG4
+#define S32V234_PAD_PD3__RX_D2_IN           976 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PD4__RX_D3_OUT          52  PAD_CTL_ENET_CFG4
+#define S32V234_PAD_PD4__RX_D3_IN           977 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PD4__RX_DV_OUT          53  PAD_CTL_ENET_CFG4
+#define S32V234_PAD_PD4__RX_DV_IN           973 PAD_CTL_MUX_MODE_ALT2
+
+#define S32V234_PAD_PD7__TX_D0_OUT          55  PAD_CTL_ENET_CFG2
+#define S32V234_PAD_PD8__TX_D1_OUT          56  PAD_CTL_ENET_CFG2
+#define S32V234_PAD_PD9__TX_D2_OUT          57  PAD_CTL_ENET_CFG2
+#define S32V234_PAD_PD10__TX_D3_OUT         58  PAD_CTL_ENET_CFG2
+#define S32V234_PAD_PD11__TX_EN_OUT         59  PAD_CTL_ENET_CFG2
+
+/* 2D ACE DCU */
+#define S32V234_PAD_PH8__DCU_HSYNC_C1		120	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PH9__DCU_VSYNC_C2		121	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PH10__DCU_DE_C3			122	PAD_CTL_DCU_CFG
+
+#define S32V234_PAD_PH12__DCU_PCLK_D1_DSE_DISABLE	124	PAD_CTL_DCU_CLK_CFG_DSE_DISABLE
+#define S32V234_PAD_PH12__DCU_PCLK_D1_DSE_240		124	(PAD_CTL_DCU_CLK_CFG_DSE_DISABLE | PAD_CTL_DSE_240)
+#define S32V234_PAD_PH12__DCU_PCLK_D1_DSE_120		124	(PAD_CTL_DCU_CLK_CFG_DSE_DISABLE | PAD_CTL_DSE_120)
+#define S32V234_PAD_PH12__DCU_PCLK_D1_DSE_80		124	(PAD_CTL_DCU_CLK_CFG_DSE_DISABLE | PAD_CTL_DSE_80)
+#define S32V234_PAD_PH12__DCU_PCLK_D1_DSE_60		124	(PAD_CTL_DCU_CLK_CFG_DSE_DISABLE | PAD_CTL_DSE_60)
+#define S32V234_PAD_PH12__DCU_PCLK_D1_DSE_48		124	(PAD_CTL_DCU_CLK_CFG_DSE_DISABLE | PAD_CTL_DSE_48)
+#define S32V234_PAD_PH12__DCU_PCLK_D1_DSE_40		124	(PAD_CTL_DCU_CLK_CFG_DSE_DISABLE | PAD_CTL_DSE_40)
+#define S32V234_PAD_PH12__DCU_PCLK_D1_DSE_34		124	(PAD_CTL_DCU_CLK_CFG_DSE_DISABLE | PAD_CTL_DSE_34)
+
+#define S32V234_PAD_PH13__DCU_R0_D2			125	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PH14__DCU_R1_D3			126	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PH15__DCU_R2_D4			127	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ0__DCU_R3_D5			128	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ1__DCU_R4_D6			129	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ2__DCU_R5_D7			130	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ3__DCU_R6_D8			131	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ4__DCU_R7_D9			132	PAD_CTL_DCU_CFG
+
+#define S32V234_PAD_PJ5__DCU_G0_D10			133	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ6__DCU_G1_D11			134	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ7__DCU_G2_D12			135	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ8__DCU_G3_D13			136	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ9__DCU_G4_D14			137	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ10__DCU_G5_D15		138	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ11__DCU_G6_D16		139	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ12__DCU_G7_D17		140	PAD_CTL_DCU_CFG
+
+#define S32V234_PAD_PJ13__DCU_B0_D18		141	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ14__DCU_B1_D19		142	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PJ15__DCU_B2_D20		143	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PK0__DCU_B3_D21			144	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PK1__DCU_B4_D22			145	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PK2__DCU_B5_D23			146	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PK3__DCU_B6_D24			147	PAD_CTL_DCU_CFG
+#define S32V234_PAD_PK4__DCU_B7_D25			148	PAD_CTL_DCU_CFG
+
+/* VIULite0 */
+
+#define S32V234_PAD_PD13__VIU0_EN			61	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PD13__VIU0_PCLK			624	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PD14__VIU0_EN			62	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PD14__VIU0_HSYNC		622	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PD15__VIU0_EN			63	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PD15__VIU0_VSYNC		623	PAD_CTL_VIU_CFG
+
+#define S32V234_PAD_PF3__VIU_EN				83	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF3__VIU0_D4			629	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF4__VIU_EN				84	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF4__VIU0_D5			630	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF5__VIU_EN				85	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF5__VIU0_D6			631	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF6__VIU_EN				86	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF6__VIU0_D7			632	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE0__VIU0_EN			64	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE0__VIU0_D8			633	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE1__VIU0_EN			65	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE1__VIU0_D9			634	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE2__VIU0_EN			66	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE2__VIU0_D10			635	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE3__VIU0_EN			67	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE3__VIU0_D11			636	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE4__VIU0_EN			68	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE4__VIU0_D12			637	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE5__VIU0_EN			69	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE5__VIU0_D13			638	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE6__VIU0_EN			70	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE6__VIU0_D14			639	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE7__VIU0_EN			71	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE7__VIU0_D15			640	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE8__VIU0_EN			72	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE8__VIU0_D16			641	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE9__VIU0_EN			73	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE9__VIU0_D17			642	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE10__VIU0_EN			74	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE10__VIU0_D18			643	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE11__VIU0_EN			75	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE11__VIU0_D19			644	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE12__VIU0_EN			76	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE12__VIU0_D20			645	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE13__VIU0_EN			77	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE13__VIU0_D21			646	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE14__VIU0_EN			78	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE14__VIU0_D22			647	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PE15__VIU0_EN			79	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PE15__VIU0_D23			648	PAD_CTL_VIU_CFG
+
+/* VIULite1 */
+
+#define S32V234_PAD_PF0__VIU1_EN			80	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF0__VIU1_PCLK			659	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF1__VIU1_EN			81	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF1__VIU1_HSYNC			657	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF2__VIU1_EN			82	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF2__VIU1_VSYNC			658	PAD_CTL_VIU_CFG
+
+#define S32V234_PAD_PF3__VIU_EN				83	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF3__VIU1_D8			668	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF4__VIU_EN				84	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF4__VIU1_D9			669	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF5__VIU_EN				85	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF5__VIU1_D10			670	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF6__VIU_EN				86	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF6__VIU1_D11			671	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF7__VIU1_EN			87	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF7__VIU1_D12			672	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF8__VIU1_EN			88	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF8__VIU1_D13			673	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF9__VIU1_EN			89	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF9__VIU1_D14			674	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF10__VIU1_EN			90	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF10__VIU1_D15			675	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF11__VIU1_EN			91	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF11__VIU1_D16			676	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF12__VIU1_EN			92	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF12__VIU1_D17			677	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF13__VIU1_EN			93	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF13__VIU1_D18			678	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF14__VIU1_EN			94	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF14__VIU1_D19			679	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PF15__VIU1_EN			95	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PF15__VIU1_D20			680	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PG0__VIU1_EN			96	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PG0__VIU1_D21			681	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PG1__VIU1_EN			97	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PG1__VIU1_D22			682	PAD_CTL_VIU_CFG
+#define S32V234_PAD_PG2__VIU1_EN			98	PAD_CTL_VIU_IBE
+#define S32V234_PAD_PG2__VIU1_D23			683	PAD_CTL_VIU_CFG
+
+/* SPI 0-3 */
+#define S32V234_PAD_PB6__SPI0_SOUT_OUT		22	PAD_CTL_SPI_MSCR_SOUT
+#define S32V234_PAD_PB7__SPI0_SIN_OUT		23	PAD_CTL_SPI_MSCR_SIN
+#define S32V234_PAD_PB7__SPI0_SIN_IN		800	PAD_CTL_SPI_IMCR_SIN
+#define S32V234_PAD_PB5__SPI0_SCK_OUT		21	PAD_CTL_SPI_MSCR_SCK
+#define S32V234_PAD_PB8__SPI0_CS0_OUT		24	(PAD_CTL_SPI_MSCR_CSx | PAD_CTL_MUX_MODE_ALT1)
+#define S32V234_PAD_PC0__SPI0_CS4_OUT		32	(PAD_CTL_SPI_MSCR_CSx | PAD_CTL_MUX_MODE_ALT3)
+#define S32V234_PAD_PC1__SPI0_CS5_OUT		33	(PAD_CTL_SPI_MSCR_CSx | PAD_CTL_MUX_MODE_ALT3)
+#define S32V234_PAD_PC2__SPI0_CS6_OUT		34	(PAD_CTL_SPI_MSCR_CSx | PAD_CTL_MUX_MODE_ALT3)
+#define S32V234_PAD_PC3__SPI0_CS7_OUT		35	(PAD_CTL_SPI_MSCR_CSx | PAD_CTL_MUX_MODE_ALT2)
+
+#define S32V234_PAD_PB10__SPI1_SOUT_OUT		26	PAD_CTL_SPI_MSCR_SOUT
+#define S32V234_PAD_PB11__SPI1_SIN_OUT		27	PAD_CTL_SPI_MSCR_SIN
+#define S32V234_PAD_PB11__SPI1_SIN_IN		803	PAD_CTL_SPI_IMCR_SIN
+#define S32V234_PAD_PB9__SPI1_SCK_OUT		25	PAD_CTL_SPI_MSCR_SCK
+#define S32V234_PAD_PB12__SPI1_CS0_OUT		28	(PAD_CTL_SPI_MSCR_CSx | PAD_CTL_MUX_MODE_ALT1)
+
+#define S32V234_PAD_PB14__SPI2_SOUT_OUT		30	PAD_CTL_SPI_MSCR_SOUT
+#define S32V234_PAD_PB15__SPI2_SIN_OUT		31	PAD_CTL_SPI_MSCR_SIN
+#define S32V234_PAD_PB15__SPI2_SIN_IN		806	PAD_CTL_SPI_IMCR_SIN
+#define S32V234_PAD_P13__SPI2_SCK_OUT		29	PAD_CTL_SPI_MSCR_SCK
+#define S32V234_PAD_PC0__SPI2_CS0_OUT		32	(PAD_CTL_SPI_MSCR_CSx | PAD_CTL_MUX_MODE_ALT1)
+
+#define S32V234_PAD_PC2__SPI3_SOUT_OUT		34	PAD_CTL_SPI_MSCR_SOUT
+#define S32V234_PAD_PC3__SPI3_SIN_OUT		35	PAD_CTL_SPI_MSCR_SIN
+#define S32V234_PAD_PC3__SPI3_SIN_IN		809	PAD_CTL_SPI_IMCR_SIN
+#define S32V234_PAD_PC1__SPI3_SCK_OUT		33	PAD_CTL_SPI_MSCR_SCK
+#define S32V234_PAD_PC4__SPI3_CS0_OUT		36	(PAD_CTL_SPI_MSCR_CSx | PAD_CTL_MUX_MODE_ALT1)
+
+/* SIUL2 GPIOs */
+#define S32V234_PAD_PA0__SIUL_GPIO0	0	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA1__SIUL_GPIO1	1	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA2__SIUL_GPIO2	2	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA3__SIUL_GPIO3	3	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA4__SIUL_GPIO4	4	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA5__SIUL_GPIO5	5	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA6__SIUL_GPIO6	6	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA7__SIUL_GPIO7	7	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA8__SIUL_GPIO8	8	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA9__SIUL_GPIO9	9	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA10__SIUL_GPIO10	10	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA11__SIUL_GPIO11	11	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA12__SIUL_GPIO12	12	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA13__SIUL_GPIO13	13	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA14__SIUL_GPIO14	14	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PA15__SIUL_GPIO15	15	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB0__SIUL_GPIO16	16	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB1__SIUL_GPIO17	17	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB2__SIUL_GPIO18	18	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB3__SIUL_GPIO19	19	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB4__SIUL_GPIO20	20	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB5__SIUL_GPIO21	21	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB6__SIUL_GPIO22	22	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB7__SIUL_GPIO23	23	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB8__SIUL_GPIO24	24	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB9__SIUL_GPIO25	25	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB10__SIUL_GPIO26	26	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB11__SIUL_GPIO27	27	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB12__SIUL_GPIO28	28	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB13__SIUL_GPIO29	29	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB14__SIUL_GPIO30	30	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PB15__SIUL_GPIO31	31	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC0__SIUL_GPIO32	32	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC1__SIUL_GPIO33	33	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC2__SIUL_GPIO34	34	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC3__SIUL_GPIO35	35	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC4__SIUL_GPIO36	36	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC5__SIUL_GPIO37	37	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC6__SIUL_GPIO38	38	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC7__SIUL_GPIO39	39	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC8__SIUL_GPIO40	40	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC9__SIUL_GPIO41	41	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC10__SIUL_GPIO42	42	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC11__SIUL_GPIO43	43	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC12__SIUL_GPIO44	44	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC13__SIUL_GPIO45	45	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC14__SIUL_GPIO46	46	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PC15__SIUL_GPIO47	47	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD0__SIUL_GPIO48	48	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD1__SIUL_GPIO49	49	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD2__SIUL_GPIO50	50	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD3__SIUL_GPIO51	51	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD4__SIUL_GPIO52	52	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD5__SIUL_GPIO53	53	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD6__SIUL_GPIO54	54	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD7__SIUL_GPIO55	55	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD8__SIUL_GPIO56	56	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD9__SIUL_GPIO57	57	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD10__SIUL_GPIO58	58	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD11__SIUL_GPIO59	59	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD12__SIUL_GPIO60	60	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD13__SIUL_GPIO61	61	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD14__SIUL_GPIO62	62	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PD15__SIUL_GPIO63	63	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE0__SIUL_GPIO64	64	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE1__SIUL_GPIO65	65	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE2__SIUL_GPIO66	66	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE3__SIUL_GPIO67	67	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE4__SIUL_GPIO68	68	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE5__SIUL_GPIO69	69	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE6__SIUL_GPIO70	70	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE7__SIUL_GPIO71	71	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE8__SIUL_GPIO72	72	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE9__SIUL_GPIO73	73	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE10__SIUL_GPIO74	74	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE11__SIUL_GPIO75	75	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE12__SIUL_GPIO76	76	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE13__SIUL_GPIO77	77	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE14__SIUL_GPIO78	78	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PE15__SIUL_GPIO79	79	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF0__SIUL_GPIO80	80	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF1__SIUL_GPIO81	81	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF2__SIUL_GPIO82	82	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF3__SIUL_GPIO83	83	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF4__SIUL_GPIO84	84	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF5__SIUL_GPIO85	85	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF6__SIUL_GPIO86	86	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF7__SIUL_GPIO87	87	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF8__SIUL_GPIO88	88	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF9__SIUL_GPIO89	89	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF10__SIUL_GPIO90	90	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF11__SIUL_GPIO91	91	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF12__SIUL_GPIO92	92	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF13__SIUL_GPIO93	93	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF14__SIUL_GPIO94	94	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PF15__SIUL_GPIO95	95	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG0__SIUL_GPIO96	96	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG1__SIUL_GPIO97	97	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG2__SIUL_GPIO98	98	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG3__SIUL_GPIO99	99	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG4__SIUL_GPIO100	100	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG5__SIUL_GPIO101	101	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG6__SIUL_GPIO102	102	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG7__SIUL_GPIO103	103	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG8__SIUL_GPIO104	104	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG9__SIUL_GPIO105	105	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG10__SIUL_GPIO106	106	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG11__SIUL_GPIO107	107	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG12__SIUL_GPIO108	108	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG13__SIUL_GPIO109	109	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG14__SIUL_GPIO110	110	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PG15__SIUL_GPIO111	111	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH0__SIUL_GPIO112	112	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH1__SIUL_GPIO113	113	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH2__SIUL_GPIO114	114	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH3__SIUL_GPIO115	115	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH4__SIUL_GPIO116	116	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH5__SIUL_GPIO117	117	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH6__SIUL_GPIO118	118	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH7__SIUL_GPIO119	119	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH8__SIUL_GPIO120	120	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH9__SIUL_GPIO121	121	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH10__SIUL_GPIO122	122	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH11__SIUL_GPIO123	123	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH12__SIUL_GPIO124	124	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH13__SIUL_GPIO125	125	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH14__SIUL_GPIO126	126	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PH15__SIUL_GPIO127	127	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ0__SIUL_GPIO128	128	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ1__SIUL_GPIO129	129	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ2__SIUL_GPIO130	130	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ3__SIUL_GPIO131	131	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ4__SIUL_GPIO132	132	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ5__SIUL_GPIO133	133	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ6__SIUL_GPIO134	134	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ7__SIUL_GPIO135	135	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ8__SIUL_GPIO136	136	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ9__SIUL_GPIO137	137	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ10__SIUL_GPIO138	138	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ11__SIUL_GPIO139	139	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ12__SIUL_GPIO140	140	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ13__SIUL_GPIO141	141	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ14__SIUL_GPIO142	142	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PJ15__SIUL_GPIO143	143	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK0__SIUL_GPIO144	144	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK1__SIUL_GPIO145	145	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK2__SIUL_GPIO146	146	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK3__SIUL_GPIO147	147	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK4__SIUL_GPIO148	148	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK5__SIUL_GPIO149	149	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK6__SIUL_GPIO150	150	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK7__SIUL_GPIO151	151	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK8__SIUL_GPIO152	152	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK9__SIUL_GPIO153	153	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK10__SIUL_GPIO154	154	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK11__SIUL_GPIO155	155	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK12__SIUL_GPIO156	156	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK13__SIUL_GPIO157	157	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK14__SIUL_GPIO158	158	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PK15__SIUL_GPIO159	159	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PL0__SIUL_GPIO160	160	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PL1__SIUL_GPIO161	161	PAD_CTL_MUX_MODE_ALT0
+#define S32V234_PAD_PL2__SIUL_GPIO162	162	PAD_CTL_MUX_MODE_ALT0
+
+
+/* SIUL2 EIRQ pins */
+#define S32V234_PAD_PA0__SIUL_EIRQ0	590	PAD_CTL_EIRQ
+#define S32V234_PAD_PA1__SIUL_EIRQ1	591	PAD_CTL_EIRQ
+#define S32V234_PAD_PA2__SIUL_EIRQ2	592	PAD_CTL_EIRQ
+#define S32V234_PAD_PA3__SIUL_EIRQ3	593	PAD_CTL_EIRQ
+#define S32V234_PAD_PA4__SIUL_EIRQ4	594	PAD_CTL_EIRQ
+#define S32V234_PAD_PA5__SIUL_EIRQ5	595	PAD_CTL_EIRQ
+#define S32V234_PAD_PA6__SIUL_EIRQ6	596	PAD_CTL_EIRQ
+#define S32V234_PAD_PA7__SIUL_EIRQ7	597	PAD_CTL_EIRQ
+#define S32V234_PAD_PA8__SIUL_EIRQ8	598	PAD_CTL_EIRQ
+#define S32V234_PAD_PA9__SIUL_EIRQ9	599	PAD_CTL_EIRQ
+#define S32V234_PAD_PA10__SIUL_EIRQ10	600	PAD_CTL_EIRQ
+#define S32V234_PAD_PA11__SIUL_EIRQ11	601	PAD_CTL_EIRQ
+#define S32V234_PAD_PA12__SIUL_EIRQ12	602	PAD_CTL_EIRQ
+#define S32V234_PAD_PA13__SIUL_EIRQ13	603	PAD_CTL_EIRQ
+#define S32V234_PAD_PA14__SIUL_EIRQ14	604	PAD_CTL_EIRQ
+#define S32V234_PAD_PA15__SIUL_EIRQ15	605	PAD_CTL_EIRQ
+#define S32V234_PAD_PB0__SIUL_EIRQ16	606	PAD_CTL_EIRQ
+#define S32V234_PAD_PB1__SIUL_EIRQ17	607	PAD_CTL_EIRQ
+#define S32V234_PAD_PB2__SIUL_EIRQ18	608	PAD_CTL_EIRQ
+#define S32V234_PAD_PB3__SIUL_EIRQ19	609	PAD_CTL_EIRQ
+#define S32V234_PAD_PB4__SIUL_EIRQ20	610	PAD_CTL_EIRQ
+#define S32V234_PAD_PB5__SIUL_EIRQ21	611	PAD_CTL_EIRQ
+#define S32V234_PAD_PB6__SIUL_EIRQ22	612	PAD_CTL_EIRQ
+#define S32V234_PAD_PB7__SIUL_EIRQ23	613	PAD_CTL_EIRQ
+#define S32V234_PAD_PB8__SIUL_EIRQ24	614	PAD_CTL_EIRQ
+#define S32V234_PAD_PB9__SIUL_EIRQ25	615	PAD_CTL_EIRQ
+#define S32V234_PAD_PB10__SIUL_EIRQ26	616	PAD_CTL_EIRQ
+#define S32V234_PAD_PB11__SIUL_EIRQ27	617	PAD_CTL_EIRQ
+#define S32V234_PAD_PB12__SIUL_EIRQ28	618	PAD_CTL_EIRQ
+#define S32V234_PAD_PB13__SIUL_EIRQ29	619	PAD_CTL_EIRQ
+#define S32V234_PAD_PB14__SIUL_EIRQ30	620	PAD_CTL_EIRQ
+#define S32V234_PAD_PB15__SIUL_EIRQ31	621	PAD_CTL_EIRQ
+
+#endif /* __DT_BINDINGS_S32V234_PINCTRL_H__ */
-- 
2.39.2

